compiling file: input_01.txt...

transition number: [ 0 ]
current stack: 0 $ 
current stack frames: { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: SEPARATOR ,      lexeme: %
Shifting: "%", next state: 2

transition number: [ 1 ]
current stack: 2 % 0 $ 
current stack frames: { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: SEPARATOR ,      lexeme: %
Shifting: "%", next state: 3

transition number: [ 2 ]
current stack: 3 % 2 % 0 $ 
current stack frames: { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: KEYWORD ,      lexeme: int
Shifting: "int", next state: 9

transition number: [ 3 ]
current stack: 9 int 3 % 2 % 0 $ 
current stack frames: { state: 9, symbol: "int", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: IDENTIFIER ,      lexeme: low
Reducing: <Qualifier> => int
in declaration list...
in int declaration ...

transition number: [ 4 ]
current stack: 8 <Qualifier> 3 % 2 % 0 $ 
current stack frames: { state: 8, symbol: "<Qualifier>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: IDENTIFIER ,      lexeme: low
Shifting: "IDENTIFIER", next state: 61

transition number: [ 5 ]
current stack: 61 IDENTIFIER 8 <Qualifier> 3 % 2 % 0 $ 
current stack frames: { state: 61, symbol: "IDENTIFIER", mem addr: 2001, opt lexeme: }, { state: 8, symbol: "<Qualifier>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: SEPARATOR ,      lexeme: ,
Shifting: ",", next state: 79

transition number: [ 6 ]
current stack: 79 , 61 IDENTIFIER 8 <Qualifier> 3 % 2 % 0 $ 
current stack frames: { state: 79, symbol: ",", mem addr: 0, opt lexeme: }, { state: 61, symbol: "IDENTIFIER", mem addr: 2001, opt lexeme: }, { state: 8, symbol: "<Qualifier>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: IDENTIFIER ,      lexeme: high
Shifting: "IDENTIFIER", next state: 61

transition number: [ 7 ]
current stack: 61 IDENTIFIER 79 , 61 IDENTIFIER 8 <Qualifier> 3 % 2 % 0 $ 
current stack frames: { state: 61, symbol: "IDENTIFIER", mem addr: 2002, opt lexeme: }, { state: 79, symbol: ",", mem addr: 0, opt lexeme: }, { state: 61, symbol: "IDENTIFIER", mem addr: 2001, opt lexeme: }, { state: 8, symbol: "<Qualifier>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: SEPARATOR ,      lexeme: ,
Shifting: ",", next state: 79

transition number: [ 8 ]
current stack: 79 , 61 IDENTIFIER 79 , 61 IDENTIFIER 8 <Qualifier> 3 % 2 % 0 $ 
current stack frames: { state: 79, symbol: ",", mem addr: 0, opt lexeme: }, { state: 61, symbol: "IDENTIFIER", mem addr: 2002, opt lexeme: }, { state: 79, symbol: ",", mem addr: 0, opt lexeme: }, { state: 61, symbol: "IDENTIFIER", mem addr: 2001, opt lexeme: }, { state: 8, symbol: "<Qualifier>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: IDENTIFIER ,      lexeme: step
Shifting: "IDENTIFIER", next state: 61

transition number: [ 9 ]
current stack: 61 IDENTIFIER 79 , 61 IDENTIFIER 79 , 61 IDENTIFIER 8 <Qualifier> 3 % 2 % 0 $ 
current stack frames: { state: 61, symbol: "IDENTIFIER", mem addr: 2003, opt lexeme: }, { state: 79, symbol: ",", mem addr: 0, opt lexeme: }, { state: 61, symbol: "IDENTIFIER", mem addr: 2002, opt lexeme: }, { state: 79, symbol: ",", mem addr: 0, opt lexeme: }, { state: 61, symbol: "IDENTIFIER", mem addr: 2001, opt lexeme: }, { state: 8, symbol: "<Qualifier>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: SEPARATOR ,      lexeme: ;
Reducing: <IDs> => IDENTIFIER

transition number: [ 10 ]
current stack: 85 <IDs> 79 , 61 IDENTIFIER 79 , 61 IDENTIFIER 8 <Qualifier> 3 % 2 % 0 $ 
current stack frames: { state: 85, symbol: "<IDs>", mem addr: 0, opt lexeme: }, { state: 79, symbol: ",", mem addr: 0, opt lexeme: }, { state: 61, symbol: "IDENTIFIER", mem addr: 2002, opt lexeme: }, { state: 79, symbol: ",", mem addr: 0, opt lexeme: }, { state: 61, symbol: "IDENTIFIER", mem addr: 2001, opt lexeme: }, { state: 8, symbol: "<Qualifier>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: SEPARATOR ,      lexeme: ;
Reducing: <IDs> => IDENTIFIER , <IDs>

transition number: [ 11 ]
current stack: 85 <IDs> 79 , 61 IDENTIFIER 8 <Qualifier> 3 % 2 % 0 $ 
current stack frames: { state: 85, symbol: "<IDs>", mem addr: 0, opt lexeme: }, { state: 79, symbol: ",", mem addr: 0, opt lexeme: }, { state: 61, symbol: "IDENTIFIER", mem addr: 2001, opt lexeme: }, { state: 8, symbol: "<Qualifier>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: SEPARATOR ,      lexeme: ;
Reducing: <IDs> => IDENTIFIER , <IDs>

transition number: [ 12 ]
current stack: 28 <IDs> 8 <Qualifier> 3 % 2 % 0 $ 
current stack frames: { state: 28, symbol: "<IDs>", mem addr: 0, opt lexeme: }, { state: 8, symbol: "<Qualifier>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: SEPARATOR ,      lexeme: ;
Reducing: <Declaration> => <Qualifier> <IDs>
end of int declaration...

transition number: [ 13 ]
current stack: 7 <Declaration> 3 % 2 % 0 $ 
current stack frames: { state: 7, symbol: "<Declaration>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: SEPARATOR ,      lexeme: ;
Shifting: ";", next state: 27

transition number: [ 14 ]
current stack: 27 ; 7 <Declaration> 3 % 2 % 0 $ 
current stack frames: { state: 27, symbol: ";", mem addr: 0, opt lexeme: }, { state: 7, symbol: "<Declaration>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: IDENTIFIER ,      lexeme: high
Reducing: <Declaration List> => <Declaration> ;

transition number: [ 15 ]
current stack: 6 <Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 6, symbol: "<Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: IDENTIFIER ,      lexeme: high
Reducing: <Opt Declaration List> => <Declaration List>
end declaration list...

transition number: [ 16 ]
current stack: 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: IDENTIFIER ,      lexeme: high
Shifting: "IDENTIFIER", next state: 21

transition number: [ 17 ]
current stack: 21 IDENTIFIER 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 21, symbol: "IDENTIFIER", mem addr: 2002, opt lexeme: high}, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: OPERATOR ,      lexeme: =
Shifting: "=", next state: 31

transition number: [ 18 ]
current stack: 31 = 21 IDENTIFIER 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 31, symbol: "=", mem addr: 0, opt lexeme: }, { state: 21, symbol: "IDENTIFIER", mem addr: 2002, opt lexeme: high}, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: IDENTIFIER ,      lexeme: low
Shifting: "IDENTIFIER", next state: 39

transition number: [ 19 ]
current stack: 39 IDENTIFIER 31 = 21 IDENTIFIER 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 39, symbol: "IDENTIFIER", mem addr: 2001, opt lexeme: low}, { state: 31, symbol: "=", mem addr: 0, opt lexeme: }, { state: 21, symbol: "IDENTIFIER", mem addr: 2002, opt lexeme: high}, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: OPERATOR ,      lexeme: +
Reducing: <Primary> => IDENTIFIER

transition number: [ 20 ]
current stack: 38 <Primary> 31 = 21 IDENTIFIER 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 38, symbol: "<Primary>", mem addr: 2001, opt lexeme: }, { state: 31, symbol: "=", mem addr: 0, opt lexeme: }, { state: 21, symbol: "IDENTIFIER", mem addr: 2002, opt lexeme: high}, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: OPERATOR ,      lexeme: +
Reducing: <Factor> => <Primary>

transition number: [ 21 ]
current stack: 36 <Factor> 31 = 21 IDENTIFIER 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 36, symbol: "<Factor>", mem addr: 2001, opt lexeme: }, { state: 31, symbol: "=", mem addr: 0, opt lexeme: }, { state: 21, symbol: "IDENTIFIER", mem addr: 2002, opt lexeme: high}, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: OPERATOR ,      lexeme: +
Reducing: <Term> => <Factor>

transition number: [ 22 ]
current stack: 35 <Term> 31 = 21 IDENTIFIER 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 35, symbol: "<Term>", mem addr: 2001, opt lexeme: }, { state: 31, symbol: "=", mem addr: 0, opt lexeme: }, { state: 21, symbol: "IDENTIFIER", mem addr: 2002, opt lexeme: high}, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: OPERATOR ,      lexeme: +
Reducing: <Expression> => <Term>

transition number: [ 23 ]
current stack: 49 <Expression> 31 = 21 IDENTIFIER 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 49, symbol: "<Expression>", mem addr: 2001, opt lexeme: }, { state: 31, symbol: "=", mem addr: 0, opt lexeme: }, { state: 21, symbol: "IDENTIFIER", mem addr: 2002, opt lexeme: high}, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: OPERATOR ,      lexeme: +
Shifting: "+", next state: 53

transition number: [ 24 ]
current stack: 53 + 49 <Expression> 31 = 21 IDENTIFIER 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 53, symbol: "+", mem addr: 0, opt lexeme: }, { state: 49, symbol: "<Expression>", mem addr: 2001, opt lexeme: }, { state: 31, symbol: "=", mem addr: 0, opt lexeme: }, { state: 21, symbol: "IDENTIFIER", mem addr: 2002, opt lexeme: high}, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: INTEGER ,      lexeme: 20000
Shifting: "INTEGER", next state: 40

transition number: [ 25 ]
current stack: 40 INTEGER 53 + 49 <Expression> 31 = 21 IDENTIFIER 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 40, symbol: "INTEGER", mem addr: 0, opt lexeme: 20000}, { state: 53, symbol: "+", mem addr: 0, opt lexeme: }, { state: 49, symbol: "<Expression>", mem addr: 2001, opt lexeme: }, { state: 31, symbol: "=", mem addr: 0, opt lexeme: }, { state: 21, symbol: "IDENTIFIER", mem addr: 2002, opt lexeme: high}, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: SEPARATOR ,      lexeme: ;
Reducing: <Primary> => INTEGER

transition number: [ 26 ]
current stack: 38 <Primary> 53 + 49 <Expression> 31 = 21 IDENTIFIER 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 38, symbol: "<Primary>", mem addr: 2004, opt lexeme: }, { state: 53, symbol: "+", mem addr: 0, opt lexeme: }, { state: 49, symbol: "<Expression>", mem addr: 2001, opt lexeme: }, { state: 31, symbol: "=", mem addr: 0, opt lexeme: }, { state: 21, symbol: "IDENTIFIER", mem addr: 2002, opt lexeme: high}, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: SEPARATOR ,      lexeme: ;
Reducing: <Factor> => <Primary>

transition number: [ 27 ]
current stack: 36 <Factor> 53 + 49 <Expression> 31 = 21 IDENTIFIER 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 36, symbol: "<Factor>", mem addr: 2004, opt lexeme: }, { state: 53, symbol: "+", mem addr: 0, opt lexeme: }, { state: 49, symbol: "<Expression>", mem addr: 2001, opt lexeme: }, { state: 31, symbol: "=", mem addr: 0, opt lexeme: }, { state: 21, symbol: "IDENTIFIER", mem addr: 2002, opt lexeme: high}, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: SEPARATOR ,      lexeme: ;
Reducing: <Term> => <Factor>

transition number: [ 28 ]
current stack: 72 <Term> 53 + 49 <Expression> 31 = 21 IDENTIFIER 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 72, symbol: "<Term>", mem addr: 2004, opt lexeme: }, { state: 53, symbol: "+", mem addr: 0, opt lexeme: }, { state: 49, symbol: "<Expression>", mem addr: 2001, opt lexeme: }, { state: 31, symbol: "=", mem addr: 0, opt lexeme: }, { state: 21, symbol: "IDENTIFIER", mem addr: 2002, opt lexeme: high}, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: SEPARATOR ,      lexeme: ;
Reducing: <Expression> => <Expression> + <Term>

transition number: [ 29 ]
current stack: 49 <Expression> 31 = 21 IDENTIFIER 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 49, symbol: "<Expression>", mem addr: 2005, opt lexeme: }, { state: 31, symbol: "=", mem addr: 0, opt lexeme: }, { state: 21, symbol: "IDENTIFIER", mem addr: 2002, opt lexeme: high}, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: SEPARATOR ,      lexeme: ;
Shifting: ";", next state: 63

transition number: [ 30 ]
current stack: 63 ; 49 <Expression> 31 = 21 IDENTIFIER 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 63, symbol: ";", mem addr: 0, opt lexeme: }, { state: 49, symbol: "<Expression>", mem addr: 2005, opt lexeme: }, { state: 31, symbol: "=", mem addr: 0, opt lexeme: }, { state: 21, symbol: "IDENTIFIER", mem addr: 2002, opt lexeme: high}, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: IDENTIFIER ,      lexeme: low
Reducing: <Assign> => IDENTIFIER = <Expression> ;

transition number: [ 31 ]
current stack: 13 <Assign> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 13, symbol: "<Assign>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: IDENTIFIER ,      lexeme: low
Reducing: <Statement> => <Assign>

transition number: [ 32 ]
current stack: 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: IDENTIFIER ,      lexeme: low
Shifting: "IDENTIFIER", next state: 21

transition number: [ 33 ]
current stack: 21 IDENTIFIER 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 21, symbol: "IDENTIFIER", mem addr: 2001, opt lexeme: low}, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: OPERATOR ,      lexeme: =
Shifting: "=", next state: 31

transition number: [ 34 ]
current stack: 31 = 21 IDENTIFIER 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 31, symbol: "=", mem addr: 0, opt lexeme: }, { state: 21, symbol: "IDENTIFIER", mem addr: 2001, opt lexeme: low}, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: IDENTIFIER ,      lexeme: high
Shifting: "IDENTIFIER", next state: 39

transition number: [ 35 ]
current stack: 39 IDENTIFIER 31 = 21 IDENTIFIER 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 39, symbol: "IDENTIFIER", mem addr: 2002, opt lexeme: high}, { state: 31, symbol: "=", mem addr: 0, opt lexeme: }, { state: 21, symbol: "IDENTIFIER", mem addr: 2001, opt lexeme: low}, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: OPERATOR ,      lexeme: -
Reducing: <Primary> => IDENTIFIER

transition number: [ 36 ]
current stack: 38 <Primary> 31 = 21 IDENTIFIER 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 38, symbol: "<Primary>", mem addr: 2002, opt lexeme: }, { state: 31, symbol: "=", mem addr: 0, opt lexeme: }, { state: 21, symbol: "IDENTIFIER", mem addr: 2001, opt lexeme: low}, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: OPERATOR ,      lexeme: -
Reducing: <Factor> => <Primary>

transition number: [ 37 ]
current stack: 36 <Factor> 31 = 21 IDENTIFIER 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 36, symbol: "<Factor>", mem addr: 2002, opt lexeme: }, { state: 31, symbol: "=", mem addr: 0, opt lexeme: }, { state: 21, symbol: "IDENTIFIER", mem addr: 2001, opt lexeme: low}, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: OPERATOR ,      lexeme: -
Reducing: <Term> => <Factor>

transition number: [ 38 ]
current stack: 35 <Term> 31 = 21 IDENTIFIER 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 35, symbol: "<Term>", mem addr: 2002, opt lexeme: }, { state: 31, symbol: "=", mem addr: 0, opt lexeme: }, { state: 21, symbol: "IDENTIFIER", mem addr: 2001, opt lexeme: low}, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: OPERATOR ,      lexeme: -
Reducing: <Expression> => <Term>

transition number: [ 39 ]
current stack: 49 <Expression> 31 = 21 IDENTIFIER 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 49, symbol: "<Expression>", mem addr: 2002, opt lexeme: }, { state: 31, symbol: "=", mem addr: 0, opt lexeme: }, { state: 21, symbol: "IDENTIFIER", mem addr: 2001, opt lexeme: low}, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: OPERATOR ,      lexeme: -
Shifting: "-", next state: 54

transition number: [ 40 ]
current stack: 54 - 49 <Expression> 31 = 21 IDENTIFIER 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 54, symbol: "-", mem addr: 0, opt lexeme: }, { state: 49, symbol: "<Expression>", mem addr: 2002, opt lexeme: }, { state: 31, symbol: "=", mem addr: 0, opt lexeme: }, { state: 21, symbol: "IDENTIFIER", mem addr: 2001, opt lexeme: low}, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: IDENTIFIER ,      lexeme: step
Shifting: "IDENTIFIER", next state: 39

transition number: [ 41 ]
current stack: 39 IDENTIFIER 54 - 49 <Expression> 31 = 21 IDENTIFIER 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 39, symbol: "IDENTIFIER", mem addr: 2003, opt lexeme: step}, { state: 54, symbol: "-", mem addr: 0, opt lexeme: }, { state: 49, symbol: "<Expression>", mem addr: 2002, opt lexeme: }, { state: 31, symbol: "=", mem addr: 0, opt lexeme: }, { state: 21, symbol: "IDENTIFIER", mem addr: 2001, opt lexeme: low}, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: SEPARATOR ,      lexeme: ;
Reducing: <Primary> => IDENTIFIER

transition number: [ 42 ]
current stack: 38 <Primary> 54 - 49 <Expression> 31 = 21 IDENTIFIER 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 38, symbol: "<Primary>", mem addr: 2003, opt lexeme: }, { state: 54, symbol: "-", mem addr: 0, opt lexeme: }, { state: 49, symbol: "<Expression>", mem addr: 2002, opt lexeme: }, { state: 31, symbol: "=", mem addr: 0, opt lexeme: }, { state: 21, symbol: "IDENTIFIER", mem addr: 2001, opt lexeme: low}, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: SEPARATOR ,      lexeme: ;
Reducing: <Factor> => <Primary>

transition number: [ 43 ]
current stack: 36 <Factor> 54 - 49 <Expression> 31 = 21 IDENTIFIER 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 36, symbol: "<Factor>", mem addr: 2003, opt lexeme: }, { state: 54, symbol: "-", mem addr: 0, opt lexeme: }, { state: 49, symbol: "<Expression>", mem addr: 2002, opt lexeme: }, { state: 31, symbol: "=", mem addr: 0, opt lexeme: }, { state: 21, symbol: "IDENTIFIER", mem addr: 2001, opt lexeme: low}, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: SEPARATOR ,      lexeme: ;
Reducing: <Term> => <Factor>

transition number: [ 44 ]
current stack: 73 <Term> 54 - 49 <Expression> 31 = 21 IDENTIFIER 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 73, symbol: "<Term>", mem addr: 2003, opt lexeme: }, { state: 54, symbol: "-", mem addr: 0, opt lexeme: }, { state: 49, symbol: "<Expression>", mem addr: 2002, opt lexeme: }, { state: 31, symbol: "=", mem addr: 0, opt lexeme: }, { state: 21, symbol: "IDENTIFIER", mem addr: 2001, opt lexeme: low}, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: SEPARATOR ,      lexeme: ;
Reducing: <Expression> => <Expression> - <Term>

transition number: [ 45 ]
current stack: 49 <Expression> 31 = 21 IDENTIFIER 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 49, symbol: "<Expression>", mem addr: 2006, opt lexeme: }, { state: 31, symbol: "=", mem addr: 0, opt lexeme: }, { state: 21, symbol: "IDENTIFIER", mem addr: 2001, opt lexeme: low}, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: SEPARATOR ,      lexeme: ;
Shifting: ";", next state: 63

transition number: [ 46 ]
current stack: 63 ; 49 <Expression> 31 = 21 IDENTIFIER 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 63, symbol: ";", mem addr: 0, opt lexeme: }, { state: 49, symbol: "<Expression>", mem addr: 2006, opt lexeme: }, { state: 31, symbol: "=", mem addr: 0, opt lexeme: }, { state: 21, symbol: "IDENTIFIER", mem addr: 2001, opt lexeme: low}, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: IDENTIFIER ,      lexeme: step
Reducing: <Assign> => IDENTIFIER = <Expression> ;

transition number: [ 47 ]
current stack: 13 <Assign> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 13, symbol: "<Assign>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: IDENTIFIER ,      lexeme: step
Reducing: <Statement> => <Assign>

transition number: [ 48 ]
current stack: 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: IDENTIFIER ,      lexeme: step
Shifting: "IDENTIFIER", next state: 21

transition number: [ 49 ]
current stack: 21 IDENTIFIER 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 21, symbol: "IDENTIFIER", mem addr: 2003, opt lexeme: step}, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: OPERATOR ,      lexeme: =
Shifting: "=", next state: 31

transition number: [ 50 ]
current stack: 31 = 21 IDENTIFIER 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 31, symbol: "=", mem addr: 0, opt lexeme: }, { state: 21, symbol: "IDENTIFIER", mem addr: 2003, opt lexeme: step}, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: IDENTIFIER ,      lexeme: high
Shifting: "IDENTIFIER", next state: 39

transition number: [ 51 ]
current stack: 39 IDENTIFIER 31 = 21 IDENTIFIER 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 39, symbol: "IDENTIFIER", mem addr: 2002, opt lexeme: high}, { state: 31, symbol: "=", mem addr: 0, opt lexeme: }, { state: 21, symbol: "IDENTIFIER", mem addr: 2003, opt lexeme: step}, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: OPERATOR ,      lexeme: *
Reducing: <Primary> => IDENTIFIER

transition number: [ 52 ]
current stack: 38 <Primary> 31 = 21 IDENTIFIER 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 38, symbol: "<Primary>", mem addr: 2002, opt lexeme: }, { state: 31, symbol: "=", mem addr: 0, opt lexeme: }, { state: 21, symbol: "IDENTIFIER", mem addr: 2003, opt lexeme: step}, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: OPERATOR ,      lexeme: *
Reducing: <Factor> => <Primary>

transition number: [ 53 ]
current stack: 36 <Factor> 31 = 21 IDENTIFIER 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 36, symbol: "<Factor>", mem addr: 2002, opt lexeme: }, { state: 31, symbol: "=", mem addr: 0, opt lexeme: }, { state: 21, symbol: "IDENTIFIER", mem addr: 2003, opt lexeme: step}, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: OPERATOR ,      lexeme: *
Reducing: <Term> => <Factor>

transition number: [ 54 ]
current stack: 35 <Term> 31 = 21 IDENTIFIER 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 35, symbol: "<Term>", mem addr: 2002, opt lexeme: }, { state: 31, symbol: "=", mem addr: 0, opt lexeme: }, { state: 21, symbol: "IDENTIFIER", mem addr: 2003, opt lexeme: step}, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: OPERATOR ,      lexeme: *
Shifting: "*", next state: 55

transition number: [ 55 ]
current stack: 55 * 35 <Term> 31 = 21 IDENTIFIER 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 55, symbol: "*", mem addr: 0, opt lexeme: }, { state: 35, symbol: "<Term>", mem addr: 2002, opt lexeme: }, { state: 31, symbol: "=", mem addr: 0, opt lexeme: }, { state: 21, symbol: "IDENTIFIER", mem addr: 2003, opt lexeme: step}, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: IDENTIFIER ,      lexeme: low
Shifting: "IDENTIFIER", next state: 39

transition number: [ 56 ]
current stack: 39 IDENTIFIER 55 * 35 <Term> 31 = 21 IDENTIFIER 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 39, symbol: "IDENTIFIER", mem addr: 2001, opt lexeme: low}, { state: 55, symbol: "*", mem addr: 0, opt lexeme: }, { state: 35, symbol: "<Term>", mem addr: 2002, opt lexeme: }, { state: 31, symbol: "=", mem addr: 0, opt lexeme: }, { state: 21, symbol: "IDENTIFIER", mem addr: 2003, opt lexeme: step}, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: SEPARATOR ,      lexeme: ;
Reducing: <Primary> => IDENTIFIER

transition number: [ 57 ]
current stack: 38 <Primary> 55 * 35 <Term> 31 = 21 IDENTIFIER 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 38, symbol: "<Primary>", mem addr: 2001, opt lexeme: }, { state: 55, symbol: "*", mem addr: 0, opt lexeme: }, { state: 35, symbol: "<Term>", mem addr: 2002, opt lexeme: }, { state: 31, symbol: "=", mem addr: 0, opt lexeme: }, { state: 21, symbol: "IDENTIFIER", mem addr: 2003, opt lexeme: step}, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: SEPARATOR ,      lexeme: ;
Reducing: <Factor> => <Primary>

transition number: [ 58 ]
current stack: 74 <Factor> 55 * 35 <Term> 31 = 21 IDENTIFIER 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 74, symbol: "<Factor>", mem addr: 2001, opt lexeme: }, { state: 55, symbol: "*", mem addr: 0, opt lexeme: }, { state: 35, symbol: "<Term>", mem addr: 2002, opt lexeme: }, { state: 31, symbol: "=", mem addr: 0, opt lexeme: }, { state: 21, symbol: "IDENTIFIER", mem addr: 2003, opt lexeme: step}, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: SEPARATOR ,      lexeme: ;
Reducing: <Term> => <Term> * <Factor>

transition number: [ 59 ]
current stack: 35 <Term> 31 = 21 IDENTIFIER 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 35, symbol: "<Term>", mem addr: 2007, opt lexeme: }, { state: 31, symbol: "=", mem addr: 0, opt lexeme: }, { state: 21, symbol: "IDENTIFIER", mem addr: 2003, opt lexeme: step}, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: SEPARATOR ,      lexeme: ;
Reducing: <Expression> => <Term>

transition number: [ 60 ]
current stack: 49 <Expression> 31 = 21 IDENTIFIER 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 49, symbol: "<Expression>", mem addr: 2007, opt lexeme: }, { state: 31, symbol: "=", mem addr: 0, opt lexeme: }, { state: 21, symbol: "IDENTIFIER", mem addr: 2003, opt lexeme: step}, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: SEPARATOR ,      lexeme: ;
Shifting: ";", next state: 63

transition number: [ 61 ]
current stack: 63 ; 49 <Expression> 31 = 21 IDENTIFIER 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 63, symbol: ";", mem addr: 0, opt lexeme: }, { state: 49, symbol: "<Expression>", mem addr: 2007, opt lexeme: }, { state: 31, symbol: "=", mem addr: 0, opt lexeme: }, { state: 21, symbol: "IDENTIFIER", mem addr: 2003, opt lexeme: step}, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: IDENTIFIER ,      lexeme: step
Reducing: <Assign> => IDENTIFIER = <Expression> ;

transition number: [ 62 ]
current stack: 13 <Assign> 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 13, symbol: "<Assign>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: IDENTIFIER ,      lexeme: step
Reducing: <Statement> => <Assign>

transition number: [ 63 ]
current stack: 11 <Statement> 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: IDENTIFIER ,      lexeme: step
Shifting: "IDENTIFIER", next state: 21

transition number: [ 64 ]
current stack: 21 IDENTIFIER 11 <Statement> 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 21, symbol: "IDENTIFIER", mem addr: 2003, opt lexeme: step}, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: OPERATOR ,      lexeme: =
Shifting: "=", next state: 31

transition number: [ 65 ]
current stack: 31 = 21 IDENTIFIER 11 <Statement> 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 31, symbol: "=", mem addr: 0, opt lexeme: }, { state: 21, symbol: "IDENTIFIER", mem addr: 2003, opt lexeme: step}, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: IDENTIFIER ,      lexeme: high
Shifting: "IDENTIFIER", next state: 39

transition number: [ 66 ]
current stack: 39 IDENTIFIER 31 = 21 IDENTIFIER 11 <Statement> 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 39, symbol: "IDENTIFIER", mem addr: 2002, opt lexeme: high}, { state: 31, symbol: "=", mem addr: 0, opt lexeme: }, { state: 21, symbol: "IDENTIFIER", mem addr: 2003, opt lexeme: step}, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: OPERATOR ,      lexeme: /
Reducing: <Primary> => IDENTIFIER

transition number: [ 67 ]
current stack: 38 <Primary> 31 = 21 IDENTIFIER 11 <Statement> 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 38, symbol: "<Primary>", mem addr: 2002, opt lexeme: }, { state: 31, symbol: "=", mem addr: 0, opt lexeme: }, { state: 21, symbol: "IDENTIFIER", mem addr: 2003, opt lexeme: step}, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: OPERATOR ,      lexeme: /
Reducing: <Factor> => <Primary>

transition number: [ 68 ]
current stack: 36 <Factor> 31 = 21 IDENTIFIER 11 <Statement> 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 36, symbol: "<Factor>", mem addr: 2002, opt lexeme: }, { state: 31, symbol: "=", mem addr: 0, opt lexeme: }, { state: 21, symbol: "IDENTIFIER", mem addr: 2003, opt lexeme: step}, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: OPERATOR ,      lexeme: /
Reducing: <Term> => <Factor>

transition number: [ 69 ]
current stack: 35 <Term> 31 = 21 IDENTIFIER 11 <Statement> 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 35, symbol: "<Term>", mem addr: 2002, opt lexeme: }, { state: 31, symbol: "=", mem addr: 0, opt lexeme: }, { state: 21, symbol: "IDENTIFIER", mem addr: 2003, opt lexeme: step}, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: OPERATOR ,      lexeme: /
Shifting: "/", next state: 56

transition number: [ 70 ]
current stack: 56 / 35 <Term> 31 = 21 IDENTIFIER 11 <Statement> 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 56, symbol: "/", mem addr: 0, opt lexeme: }, { state: 35, symbol: "<Term>", mem addr: 2002, opt lexeme: }, { state: 31, symbol: "=", mem addr: 0, opt lexeme: }, { state: 21, symbol: "IDENTIFIER", mem addr: 2003, opt lexeme: step}, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: INTEGER ,      lexeme: 10
Shifting: "INTEGER", next state: 40

transition number: [ 71 ]
current stack: 40 INTEGER 56 / 35 <Term> 31 = 21 IDENTIFIER 11 <Statement> 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 40, symbol: "INTEGER", mem addr: 0, opt lexeme: 10}, { state: 56, symbol: "/", mem addr: 0, opt lexeme: }, { state: 35, symbol: "<Term>", mem addr: 2002, opt lexeme: }, { state: 31, symbol: "=", mem addr: 0, opt lexeme: }, { state: 21, symbol: "IDENTIFIER", mem addr: 2003, opt lexeme: step}, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: SEPARATOR ,      lexeme: ;
Reducing: <Primary> => INTEGER

transition number: [ 72 ]
current stack: 38 <Primary> 56 / 35 <Term> 31 = 21 IDENTIFIER 11 <Statement> 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 38, symbol: "<Primary>", mem addr: 2008, opt lexeme: }, { state: 56, symbol: "/", mem addr: 0, opt lexeme: }, { state: 35, symbol: "<Term>", mem addr: 2002, opt lexeme: }, { state: 31, symbol: "=", mem addr: 0, opt lexeme: }, { state: 21, symbol: "IDENTIFIER", mem addr: 2003, opt lexeme: step}, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: SEPARATOR ,      lexeme: ;
Reducing: <Factor> => <Primary>

transition number: [ 73 ]
current stack: 75 <Factor> 56 / 35 <Term> 31 = 21 IDENTIFIER 11 <Statement> 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 75, symbol: "<Factor>", mem addr: 2008, opt lexeme: }, { state: 56, symbol: "/", mem addr: 0, opt lexeme: }, { state: 35, symbol: "<Term>", mem addr: 2002, opt lexeme: }, { state: 31, symbol: "=", mem addr: 0, opt lexeme: }, { state: 21, symbol: "IDENTIFIER", mem addr: 2003, opt lexeme: step}, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: SEPARATOR ,      lexeme: ;
Reducing: <Term> => <Term> / <Factor>

transition number: [ 74 ]
current stack: 35 <Term> 31 = 21 IDENTIFIER 11 <Statement> 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 35, symbol: "<Term>", mem addr: 2009, opt lexeme: }, { state: 31, symbol: "=", mem addr: 0, opt lexeme: }, { state: 21, symbol: "IDENTIFIER", mem addr: 2003, opt lexeme: step}, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: SEPARATOR ,      lexeme: ;
Reducing: <Expression> => <Term>

transition number: [ 75 ]
current stack: 49 <Expression> 31 = 21 IDENTIFIER 11 <Statement> 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 49, symbol: "<Expression>", mem addr: 2009, opt lexeme: }, { state: 31, symbol: "=", mem addr: 0, opt lexeme: }, { state: 21, symbol: "IDENTIFIER", mem addr: 2003, opt lexeme: step}, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: SEPARATOR ,      lexeme: ;
Shifting: ";", next state: 63

transition number: [ 76 ]
current stack: 63 ; 49 <Expression> 31 = 21 IDENTIFIER 11 <Statement> 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 63, symbol: ";", mem addr: 0, opt lexeme: }, { state: 49, symbol: "<Expression>", mem addr: 2009, opt lexeme: }, { state: 31, symbol: "=", mem addr: 0, opt lexeme: }, { state: 21, symbol: "IDENTIFIER", mem addr: 2003, opt lexeme: step}, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: KEYWORD ,      lexeme: return
Reducing: <Assign> => IDENTIFIER = <Expression> ;

transition number: [ 77 ]
current stack: 13 <Assign> 11 <Statement> 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 13, symbol: "<Assign>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: KEYWORD ,      lexeme: return
Reducing: <Statement> => <Assign>

transition number: [ 78 ]
current stack: 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: KEYWORD ,      lexeme: return
Shifting: "return", next state: 23

transition number: [ 79 ]
current stack: 23 return 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 23, symbol: "return", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: IDENTIFIER ,      lexeme: high
Shifting: "IDENTIFIER", next state: 39

transition number: [ 80 ]
current stack: 39 IDENTIFIER 23 return 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 39, symbol: "IDENTIFIER", mem addr: 2002, opt lexeme: high}, { state: 23, symbol: "return", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: SEPARATOR ,      lexeme: ;
Reducing: <Primary> => IDENTIFIER

transition number: [ 81 ]
current stack: 38 <Primary> 23 return 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 38, symbol: "<Primary>", mem addr: 2002, opt lexeme: }, { state: 23, symbol: "return", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: SEPARATOR ,      lexeme: ;
Reducing: <Factor> => <Primary>

transition number: [ 82 ]
current stack: 36 <Factor> 23 return 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 36, symbol: "<Factor>", mem addr: 2002, opt lexeme: }, { state: 23, symbol: "return", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: SEPARATOR ,      lexeme: ;
Reducing: <Term> => <Factor>

transition number: [ 83 ]
current stack: 35 <Term> 23 return 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 35, symbol: "<Term>", mem addr: 2002, opt lexeme: }, { state: 23, symbol: "return", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: SEPARATOR ,      lexeme: ;
Reducing: <Expression> => <Term>

transition number: [ 84 ]
current stack: 34 <Expression> 23 return 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 34, symbol: "<Expression>", mem addr: 2002, opt lexeme: }, { state: 23, symbol: "return", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: SEPARATOR ,      lexeme: ;
Shifting: ";", next state: 52

transition number: [ 85 ]
current stack: 52 ; 34 <Expression> 23 return 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 52, symbol: ";", mem addr: 0, opt lexeme: }, { state: 34, symbol: "<Expression>", mem addr: 2002, opt lexeme: }, { state: 23, symbol: "return", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: END_INPUT ,      lexeme: $
Reducing: <Return> => return <Expression> ;

transition number: [ 86 ]
current stack: 15 <Return> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 15, symbol: "<Return>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: END_INPUT ,      lexeme: $
Reducing: <Statement> => <Return>

transition number: [ 87 ]
current stack: 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: END_INPUT ,      lexeme: $
Reducing: <Statement List> => <Statement>

transition number: [ 88 ]
current stack: 29 <Statement List> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 29, symbol: "<Statement List>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: END_INPUT ,      lexeme: $
Reducing: <Statement List> => <Statement> <Statement List>

transition number: [ 89 ]
current stack: 29 <Statement List> 11 <Statement> 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 29, symbol: "<Statement List>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: END_INPUT ,      lexeme: $
Reducing: <Statement List> => <Statement> <Statement List>

transition number: [ 90 ]
current stack: 29 <Statement List> 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 29, symbol: "<Statement List>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: END_INPUT ,      lexeme: $
Reducing: <Statement List> => <Statement> <Statement List>

transition number: [ 91 ]
current stack: 29 <Statement List> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 29, symbol: "<Statement List>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: END_INPUT ,      lexeme: $
Reducing: <Statement List> => <Statement> <Statement List>

transition number: [ 92 ]
current stack: 19 <Statement List> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 19, symbol: "<Statement List>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: END_INPUT ,      lexeme: $
Reducing: <Rat23S> => % % <Opt Declaration List> <Statement List>

transition number: [ 93 ]
current stack: 1 <Rat23S> 0 $ 
current stack frames: { state: 1, symbol: "<Rat23S>", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: END_INPUT ,      lexeme: $
INPUT ACCEPTED


successfully compiled input. input is valid.