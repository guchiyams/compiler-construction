compiling file: input_03.txt...

transition number: [ 0 ]
current stack: 0 $ 
current stack frames: { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: SEPARATOR ,      lexeme: %
Shifting: "%", next state: 2

transition number: [ 1 ]
current stack: 2 % 0 $ 
current stack frames: { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: SEPARATOR ,      lexeme: %
Shifting: "%", next state: 3

transition number: [ 2 ]
current stack: 3 % 2 % 0 $ 
current stack frames: { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: KEYWORD ,      lexeme: int
Shifting: "int", next state: 9

transition number: [ 3 ]
current stack: 9 int 3 % 2 % 0 $ 
current stack frames: { state: 9, symbol: "int", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: IDENTIFIER ,      lexeme: low
Reducing: <Qualifier> => int
in declaration list...
in int declaration ...

transition number: [ 4 ]
current stack: 8 <Qualifier> 3 % 2 % 0 $ 
current stack frames: { state: 8, symbol: "<Qualifier>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: IDENTIFIER ,      lexeme: low
Shifting: "IDENTIFIER", next state: 61

transition number: [ 5 ]
current stack: 61 IDENTIFIER 8 <Qualifier> 3 % 2 % 0 $ 
current stack frames: { state: 61, symbol: "IDENTIFIER", mem addr: 2001, opt lexeme: }, { state: 8, symbol: "<Qualifier>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: SEPARATOR ,      lexeme: ,
Shifting: ",", next state: 79

transition number: [ 6 ]
current stack: 79 , 61 IDENTIFIER 8 <Qualifier> 3 % 2 % 0 $ 
current stack frames: { state: 79, symbol: ",", mem addr: 0, opt lexeme: }, { state: 61, symbol: "IDENTIFIER", mem addr: 2001, opt lexeme: }, { state: 8, symbol: "<Qualifier>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: IDENTIFIER ,      lexeme: high
Shifting: "IDENTIFIER", next state: 61

transition number: [ 7 ]
current stack: 61 IDENTIFIER 79 , 61 IDENTIFIER 8 <Qualifier> 3 % 2 % 0 $ 
current stack frames: { state: 61, symbol: "IDENTIFIER", mem addr: 2002, opt lexeme: }, { state: 79, symbol: ",", mem addr: 0, opt lexeme: }, { state: 61, symbol: "IDENTIFIER", mem addr: 2001, opt lexeme: }, { state: 8, symbol: "<Qualifier>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: SEPARATOR ,      lexeme: ,
Shifting: ",", next state: 79

transition number: [ 8 ]
current stack: 79 , 61 IDENTIFIER 79 , 61 IDENTIFIER 8 <Qualifier> 3 % 2 % 0 $ 
current stack frames: { state: 79, symbol: ",", mem addr: 0, opt lexeme: }, { state: 61, symbol: "IDENTIFIER", mem addr: 2002, opt lexeme: }, { state: 79, symbol: ",", mem addr: 0, opt lexeme: }, { state: 61, symbol: "IDENTIFIER", mem addr: 2001, opt lexeme: }, { state: 8, symbol: "<Qualifier>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: IDENTIFIER ,      lexeme: step$
Shifting: "IDENTIFIER", next state: 61

transition number: [ 9 ]
current stack: 61 IDENTIFIER 79 , 61 IDENTIFIER 79 , 61 IDENTIFIER 8 <Qualifier> 3 % 2 % 0 $ 
current stack frames: { state: 61, symbol: "IDENTIFIER", mem addr: 2003, opt lexeme: }, { state: 79, symbol: ",", mem addr: 0, opt lexeme: }, { state: 61, symbol: "IDENTIFIER", mem addr: 2002, opt lexeme: }, { state: 79, symbol: ",", mem addr: 0, opt lexeme: }, { state: 61, symbol: "IDENTIFIER", mem addr: 2001, opt lexeme: }, { state: 8, symbol: "<Qualifier>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: SEPARATOR ,      lexeme: ,
Shifting: ",", next state: 79

transition number: [ 10 ]
current stack: 79 , 61 IDENTIFIER 79 , 61 IDENTIFIER 79 , 61 IDENTIFIER 8 <Qualifier> 3 % 2 % 0 $ 
current stack frames: { state: 79, symbol: ",", mem addr: 0, opt lexeme: }, { state: 61, symbol: "IDENTIFIER", mem addr: 2003, opt lexeme: }, { state: 79, symbol: ",", mem addr: 0, opt lexeme: }, { state: 61, symbol: "IDENTIFIER", mem addr: 2002, opt lexeme: }, { state: 79, symbol: ",", mem addr: 0, opt lexeme: }, { state: 61, symbol: "IDENTIFIER", mem addr: 2001, opt lexeme: }, { state: 8, symbol: "<Qualifier>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: IDENTIFIER ,      lexeme: done
Shifting: "IDENTIFIER", next state: 61

transition number: [ 11 ]
current stack: 61 IDENTIFIER 79 , 61 IDENTIFIER 79 , 61 IDENTIFIER 79 , 61 IDENTIFIER 8 <Qualifier> 3 % 2 % 0 $ 
current stack frames: { state: 61, symbol: "IDENTIFIER", mem addr: 2004, opt lexeme: }, { state: 79, symbol: ",", mem addr: 0, opt lexeme: }, { state: 61, symbol: "IDENTIFIER", mem addr: 2003, opt lexeme: }, { state: 79, symbol: ",", mem addr: 0, opt lexeme: }, { state: 61, symbol: "IDENTIFIER", mem addr: 2002, opt lexeme: }, { state: 79, symbol: ",", mem addr: 0, opt lexeme: }, { state: 61, symbol: "IDENTIFIER", mem addr: 2001, opt lexeme: }, { state: 8, symbol: "<Qualifier>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: SEPARATOR ,      lexeme: ;
Reducing: <IDs> => IDENTIFIER

transition number: [ 12 ]
current stack: 85 <IDs> 79 , 61 IDENTIFIER 79 , 61 IDENTIFIER 79 , 61 IDENTIFIER 8 <Qualifier> 3 % 2 % 0 $ 
current stack frames: { state: 85, symbol: "<IDs>", mem addr: 0, opt lexeme: }, { state: 79, symbol: ",", mem addr: 0, opt lexeme: }, { state: 61, symbol: "IDENTIFIER", mem addr: 2003, opt lexeme: }, { state: 79, symbol: ",", mem addr: 0, opt lexeme: }, { state: 61, symbol: "IDENTIFIER", mem addr: 2002, opt lexeme: }, { state: 79, symbol: ",", mem addr: 0, opt lexeme: }, { state: 61, symbol: "IDENTIFIER", mem addr: 2001, opt lexeme: }, { state: 8, symbol: "<Qualifier>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: SEPARATOR ,      lexeme: ;
Reducing: <IDs> => IDENTIFIER , <IDs>

transition number: [ 13 ]
current stack: 85 <IDs> 79 , 61 IDENTIFIER 79 , 61 IDENTIFIER 8 <Qualifier> 3 % 2 % 0 $ 
current stack frames: { state: 85, symbol: "<IDs>", mem addr: 0, opt lexeme: }, { state: 79, symbol: ",", mem addr: 0, opt lexeme: }, { state: 61, symbol: "IDENTIFIER", mem addr: 2002, opt lexeme: }, { state: 79, symbol: ",", mem addr: 0, opt lexeme: }, { state: 61, symbol: "IDENTIFIER", mem addr: 2001, opt lexeme: }, { state: 8, symbol: "<Qualifier>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: SEPARATOR ,      lexeme: ;
Reducing: <IDs> => IDENTIFIER , <IDs>

transition number: [ 14 ]
current stack: 85 <IDs> 79 , 61 IDENTIFIER 8 <Qualifier> 3 % 2 % 0 $ 
current stack frames: { state: 85, symbol: "<IDs>", mem addr: 0, opt lexeme: }, { state: 79, symbol: ",", mem addr: 0, opt lexeme: }, { state: 61, symbol: "IDENTIFIER", mem addr: 2001, opt lexeme: }, { state: 8, symbol: "<Qualifier>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: SEPARATOR ,      lexeme: ;
Reducing: <IDs> => IDENTIFIER , <IDs>

transition number: [ 15 ]
current stack: 28 <IDs> 8 <Qualifier> 3 % 2 % 0 $ 
current stack frames: { state: 28, symbol: "<IDs>", mem addr: 0, opt lexeme: }, { state: 8, symbol: "<Qualifier>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: SEPARATOR ,      lexeme: ;
Reducing: <Declaration> => <Qualifier> <IDs>
end of int declaration...

transition number: [ 16 ]
current stack: 7 <Declaration> 3 % 2 % 0 $ 
current stack frames: { state: 7, symbol: "<Declaration>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: SEPARATOR ,      lexeme: ;
Shifting: ";", next state: 27

transition number: [ 17 ]
current stack: 27 ; 7 <Declaration> 3 % 2 % 0 $ 
current stack frames: { state: 27, symbol: ";", mem addr: 0, opt lexeme: }, { state: 7, symbol: "<Declaration>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: KEYWORD ,      lexeme: boolean
Shifting: "boolean", next state: 10

transition number: [ 18 ]
current stack: 10 boolean 27 ; 7 <Declaration> 3 % 2 % 0 $ 
current stack frames: { state: 10, symbol: "boolean", mem addr: 0, opt lexeme: }, { state: 27, symbol: ";", mem addr: 0, opt lexeme: }, { state: 7, symbol: "<Declaration>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: IDENTIFIER ,      lexeme: x
Reducing: <Qualifier> => boolean
in declaration list...
in int declaration ...

transition number: [ 19 ]
current stack: 8 <Qualifier> 27 ; 7 <Declaration> 3 % 2 % 0 $ 
current stack frames: { state: 8, symbol: "<Qualifier>", mem addr: 0, opt lexeme: }, { state: 27, symbol: ";", mem addr: 0, opt lexeme: }, { state: 7, symbol: "<Declaration>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: IDENTIFIER ,      lexeme: x
Shifting: "IDENTIFIER", next state: 61

transition number: [ 20 ]
current stack: 61 IDENTIFIER 8 <Qualifier> 27 ; 7 <Declaration> 3 % 2 % 0 $ 
current stack frames: { state: 61, symbol: "IDENTIFIER", mem addr: 2005, opt lexeme: }, { state: 8, symbol: "<Qualifier>", mem addr: 0, opt lexeme: }, { state: 27, symbol: ";", mem addr: 0, opt lexeme: }, { state: 7, symbol: "<Declaration>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: SEPARATOR ,      lexeme: ,
Shifting: ",", next state: 79

transition number: [ 21 ]
current stack: 79 , 61 IDENTIFIER 8 <Qualifier> 27 ; 7 <Declaration> 3 % 2 % 0 $ 
current stack frames: { state: 79, symbol: ",", mem addr: 0, opt lexeme: }, { state: 61, symbol: "IDENTIFIER", mem addr: 2005, opt lexeme: }, { state: 8, symbol: "<Qualifier>", mem addr: 0, opt lexeme: }, { state: 27, symbol: ";", mem addr: 0, opt lexeme: }, { state: 7, symbol: "<Declaration>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: IDENTIFIER ,      lexeme: y
Shifting: "IDENTIFIER", next state: 61

transition number: [ 22 ]
current stack: 61 IDENTIFIER 79 , 61 IDENTIFIER 8 <Qualifier> 27 ; 7 <Declaration> 3 % 2 % 0 $ 
current stack frames: { state: 61, symbol: "IDENTIFIER", mem addr: 2006, opt lexeme: }, { state: 79, symbol: ",", mem addr: 0, opt lexeme: }, { state: 61, symbol: "IDENTIFIER", mem addr: 2005, opt lexeme: }, { state: 8, symbol: "<Qualifier>", mem addr: 0, opt lexeme: }, { state: 27, symbol: ";", mem addr: 0, opt lexeme: }, { state: 7, symbol: "<Declaration>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: SEPARATOR ,      lexeme: ,
Shifting: ",", next state: 79

transition number: [ 23 ]
current stack: 79 , 61 IDENTIFIER 79 , 61 IDENTIFIER 8 <Qualifier> 27 ; 7 <Declaration> 3 % 2 % 0 $ 
current stack frames: { state: 79, symbol: ",", mem addr: 0, opt lexeme: }, { state: 61, symbol: "IDENTIFIER", mem addr: 2006, opt lexeme: }, { state: 79, symbol: ",", mem addr: 0, opt lexeme: }, { state: 61, symbol: "IDENTIFIER", mem addr: 2005, opt lexeme: }, { state: 8, symbol: "<Qualifier>", mem addr: 0, opt lexeme: }, { state: 27, symbol: ";", mem addr: 0, opt lexeme: }, { state: 7, symbol: "<Declaration>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: IDENTIFIER ,      lexeme: z
Shifting: "IDENTIFIER", next state: 61

transition number: [ 24 ]
current stack: 61 IDENTIFIER 79 , 61 IDENTIFIER 79 , 61 IDENTIFIER 8 <Qualifier> 27 ; 7 <Declaration> 3 % 2 % 0 $ 
current stack frames: { state: 61, symbol: "IDENTIFIER", mem addr: 2007, opt lexeme: }, { state: 79, symbol: ",", mem addr: 0, opt lexeme: }, { state: 61, symbol: "IDENTIFIER", mem addr: 2006, opt lexeme: }, { state: 79, symbol: ",", mem addr: 0, opt lexeme: }, { state: 61, symbol: "IDENTIFIER", mem addr: 2005, opt lexeme: }, { state: 8, symbol: "<Qualifier>", mem addr: 0, opt lexeme: }, { state: 27, symbol: ";", mem addr: 0, opt lexeme: }, { state: 7, symbol: "<Declaration>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: SEPARATOR ,      lexeme: ;
Reducing: <IDs> => IDENTIFIER

transition number: [ 25 ]
current stack: 85 <IDs> 79 , 61 IDENTIFIER 79 , 61 IDENTIFIER 8 <Qualifier> 27 ; 7 <Declaration> 3 % 2 % 0 $ 
current stack frames: { state: 85, symbol: "<IDs>", mem addr: 0, opt lexeme: }, { state: 79, symbol: ",", mem addr: 0, opt lexeme: }, { state: 61, symbol: "IDENTIFIER", mem addr: 2006, opt lexeme: }, { state: 79, symbol: ",", mem addr: 0, opt lexeme: }, { state: 61, symbol: "IDENTIFIER", mem addr: 2005, opt lexeme: }, { state: 8, symbol: "<Qualifier>", mem addr: 0, opt lexeme: }, { state: 27, symbol: ";", mem addr: 0, opt lexeme: }, { state: 7, symbol: "<Declaration>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: SEPARATOR ,      lexeme: ;
Reducing: <IDs> => IDENTIFIER , <IDs>

transition number: [ 26 ]
current stack: 85 <IDs> 79 , 61 IDENTIFIER 8 <Qualifier> 27 ; 7 <Declaration> 3 % 2 % 0 $ 
current stack frames: { state: 85, symbol: "<IDs>", mem addr: 0, opt lexeme: }, { state: 79, symbol: ",", mem addr: 0, opt lexeme: }, { state: 61, symbol: "IDENTIFIER", mem addr: 2005, opt lexeme: }, { state: 8, symbol: "<Qualifier>", mem addr: 0, opt lexeme: }, { state: 27, symbol: ";", mem addr: 0, opt lexeme: }, { state: 7, symbol: "<Declaration>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: SEPARATOR ,      lexeme: ;
Reducing: <IDs> => IDENTIFIER , <IDs>

transition number: [ 27 ]
current stack: 28 <IDs> 8 <Qualifier> 27 ; 7 <Declaration> 3 % 2 % 0 $ 
current stack frames: { state: 28, symbol: "<IDs>", mem addr: 0, opt lexeme: }, { state: 8, symbol: "<Qualifier>", mem addr: 0, opt lexeme: }, { state: 27, symbol: ";", mem addr: 0, opt lexeme: }, { state: 7, symbol: "<Declaration>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: SEPARATOR ,      lexeme: ;
Reducing: <Declaration> => <Qualifier> <IDs>
end of bool declaration...

transition number: [ 28 ]
current stack: 7 <Declaration> 27 ; 7 <Declaration> 3 % 2 % 0 $ 
current stack frames: { state: 7, symbol: "<Declaration>", mem addr: 0, opt lexeme: }, { state: 27, symbol: ";", mem addr: 0, opt lexeme: }, { state: 7, symbol: "<Declaration>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: SEPARATOR ,      lexeme: ;
Shifting: ";", next state: 27

transition number: [ 29 ]
current stack: 27 ; 7 <Declaration> 27 ; 7 <Declaration> 3 % 2 % 0 $ 
current stack frames: { state: 27, symbol: ";", mem addr: 0, opt lexeme: }, { state: 7, symbol: "<Declaration>", mem addr: 0, opt lexeme: }, { state: 27, symbol: ";", mem addr: 0, opt lexeme: }, { state: 7, symbol: "<Declaration>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: KEYWORD ,      lexeme: get
Reducing: <Declaration List> => <Declaration> ;

transition number: [ 30 ]
current stack: 47 <Declaration List> 27 ; 7 <Declaration> 3 % 2 % 0 $ 
current stack frames: { state: 47, symbol: "<Declaration List>", mem addr: 0, opt lexeme: }, { state: 27, symbol: ";", mem addr: 0, opt lexeme: }, { state: 7, symbol: "<Declaration>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: KEYWORD ,      lexeme: get
Reducing: <Declaration List> => <Declaration> ; <Declaration List>

transition number: [ 31 ]
current stack: 6 <Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 6, symbol: "<Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: KEYWORD ,      lexeme: get
Reducing: <Opt Declaration List> => <Declaration List>
end declaration list...

transition number: [ 32 ]
current stack: 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: KEYWORD ,      lexeme: get
Shifting: "get", next state: 25

transition number: [ 33 ]
current stack: 25 get 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 25, symbol: "get", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: SEPARATOR ,      lexeme: (
Shifting: "(", next state: 45

transition number: [ 34 ]
current stack: 45 ( 25 get 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 45, symbol: "(", mem addr: 0, opt lexeme: }, { state: 25, symbol: "get", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: IDENTIFIER ,      lexeme: low
Shifting: "IDENTIFIER", next state: 61

transition number: [ 35 ]
current stack: 61 IDENTIFIER 45 ( 25 get 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 61, symbol: "IDENTIFIER", mem addr: 2001, opt lexeme: low}, { state: 45, symbol: "(", mem addr: 0, opt lexeme: }, { state: 25, symbol: "get", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: SEPARATOR ,      lexeme: )
Reducing: <IDs> => IDENTIFIER

transition number: [ 36 ]
current stack: 60 <IDs> 45 ( 25 get 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 60, symbol: "<IDs>", mem addr: 2008, opt lexeme: }, { state: 45, symbol: "(", mem addr: 0, opt lexeme: }, { state: 25, symbol: "get", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: SEPARATOR ,      lexeme: )
Shifting: ")", next state: 78

transition number: [ 37 ]
current stack: 78 ) 60 <IDs> 45 ( 25 get 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 78, symbol: ")", mem addr: 0, opt lexeme: }, { state: 60, symbol: "<IDs>", mem addr: 2008, opt lexeme: }, { state: 45, symbol: "(", mem addr: 0, opt lexeme: }, { state: 25, symbol: "get", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: SEPARATOR ,      lexeme: ;
Shifting: ";", next state: 84

transition number: [ 38 ]
current stack: 84 ; 78 ) 60 <IDs> 45 ( 25 get 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 84, symbol: ";", mem addr: 0, opt lexeme: }, { state: 78, symbol: ")", mem addr: 0, opt lexeme: }, { state: 60, symbol: "<IDs>", mem addr: 2008, opt lexeme: }, { state: 45, symbol: "(", mem addr: 0, opt lexeme: }, { state: 25, symbol: "get", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: KEYWORD ,      lexeme: get
Reducing: <Scan> => get ( <IDs> ) ;

transition number: [ 39 ]
current stack: 17 <Scan> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 17, symbol: "<Scan>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: KEYWORD ,      lexeme: get
Reducing: <Statement> => <Scan>

transition number: [ 40 ]
current stack: 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: KEYWORD ,      lexeme: get
Shifting: "get", next state: 25

transition number: [ 41 ]
current stack: 25 get 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 25, symbol: "get", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: SEPARATOR ,      lexeme: (
Shifting: "(", next state: 45

transition number: [ 42 ]
current stack: 45 ( 25 get 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 45, symbol: "(", mem addr: 0, opt lexeme: }, { state: 25, symbol: "get", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: IDENTIFIER ,      lexeme: high
Shifting: "IDENTIFIER", next state: 61

transition number: [ 43 ]
current stack: 61 IDENTIFIER 45 ( 25 get 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 61, symbol: "IDENTIFIER", mem addr: 2002, opt lexeme: high}, { state: 45, symbol: "(", mem addr: 0, opt lexeme: }, { state: 25, symbol: "get", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: SEPARATOR ,      lexeme: )
Reducing: <IDs> => IDENTIFIER

transition number: [ 44 ]
current stack: 60 <IDs> 45 ( 25 get 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 60, symbol: "<IDs>", mem addr: 2009, opt lexeme: }, { state: 45, symbol: "(", mem addr: 0, opt lexeme: }, { state: 25, symbol: "get", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: SEPARATOR ,      lexeme: )
Shifting: ")", next state: 78

transition number: [ 45 ]
current stack: 78 ) 60 <IDs> 45 ( 25 get 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 78, symbol: ")", mem addr: 0, opt lexeme: }, { state: 60, symbol: "<IDs>", mem addr: 2009, opt lexeme: }, { state: 45, symbol: "(", mem addr: 0, opt lexeme: }, { state: 25, symbol: "get", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: SEPARATOR ,      lexeme: ;
Shifting: ";", next state: 84

transition number: [ 46 ]
current stack: 84 ; 78 ) 60 <IDs> 45 ( 25 get 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 84, symbol: ";", mem addr: 0, opt lexeme: }, { state: 78, symbol: ")", mem addr: 0, opt lexeme: }, { state: 60, symbol: "<IDs>", mem addr: 2009, opt lexeme: }, { state: 45, symbol: "(", mem addr: 0, opt lexeme: }, { state: 25, symbol: "get", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: KEYWORD ,      lexeme: get
Reducing: <Scan> => get ( <IDs> ) ;

transition number: [ 47 ]
current stack: 17 <Scan> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 17, symbol: "<Scan>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: KEYWORD ,      lexeme: get
Reducing: <Statement> => <Scan>

transition number: [ 48 ]
current stack: 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: KEYWORD ,      lexeme: get
Shifting: "get", next state: 25

transition number: [ 49 ]
current stack: 25 get 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 25, symbol: "get", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: SEPARATOR ,      lexeme: (
Shifting: "(", next state: 45

transition number: [ 50 ]
current stack: 45 ( 25 get 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 45, symbol: "(", mem addr: 0, opt lexeme: }, { state: 25, symbol: "get", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: IDENTIFIER ,      lexeme: step$
Shifting: "IDENTIFIER", next state: 61

transition number: [ 51 ]
current stack: 61 IDENTIFIER 45 ( 25 get 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 61, symbol: "IDENTIFIER", mem addr: 2003, opt lexeme: step$}, { state: 45, symbol: "(", mem addr: 0, opt lexeme: }, { state: 25, symbol: "get", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: SEPARATOR ,      lexeme: )
Reducing: <IDs> => IDENTIFIER

transition number: [ 52 ]
current stack: 60 <IDs> 45 ( 25 get 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 60, symbol: "<IDs>", mem addr: 2010, opt lexeme: }, { state: 45, symbol: "(", mem addr: 0, opt lexeme: }, { state: 25, symbol: "get", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: SEPARATOR ,      lexeme: )
Shifting: ")", next state: 78

transition number: [ 53 ]
current stack: 78 ) 60 <IDs> 45 ( 25 get 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 78, symbol: ")", mem addr: 0, opt lexeme: }, { state: 60, symbol: "<IDs>", mem addr: 2010, opt lexeme: }, { state: 45, symbol: "(", mem addr: 0, opt lexeme: }, { state: 25, symbol: "get", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: SEPARATOR ,      lexeme: ;
Shifting: ";", next state: 84

transition number: [ 54 ]
current stack: 84 ; 78 ) 60 <IDs> 45 ( 25 get 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 84, symbol: ";", mem addr: 0, opt lexeme: }, { state: 78, symbol: ")", mem addr: 0, opt lexeme: }, { state: 60, symbol: "<IDs>", mem addr: 2010, opt lexeme: }, { state: 45, symbol: "(", mem addr: 0, opt lexeme: }, { state: 25, symbol: "get", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: KEYWORD ,      lexeme: get
Reducing: <Scan> => get ( <IDs> ) ;

transition number: [ 55 ]
current stack: 17 <Scan> 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 17, symbol: "<Scan>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: KEYWORD ,      lexeme: get
Reducing: <Statement> => <Scan>

transition number: [ 56 ]
current stack: 11 <Statement> 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: KEYWORD ,      lexeme: get
Shifting: "get", next state: 25

transition number: [ 57 ]
current stack: 25 get 11 <Statement> 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 25, symbol: "get", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: SEPARATOR ,      lexeme: (
Shifting: "(", next state: 45

transition number: [ 58 ]
current stack: 45 ( 25 get 11 <Statement> 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 45, symbol: "(", mem addr: 0, opt lexeme: }, { state: 25, symbol: "get", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: IDENTIFIER ,      lexeme: low
Shifting: "IDENTIFIER", next state: 61

transition number: [ 59 ]
current stack: 61 IDENTIFIER 45 ( 25 get 11 <Statement> 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 61, symbol: "IDENTIFIER", mem addr: 2001, opt lexeme: low}, { state: 45, symbol: "(", mem addr: 0, opt lexeme: }, { state: 25, symbol: "get", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: SEPARATOR ,      lexeme: ,
Shifting: ",", next state: 79

transition number: [ 60 ]
current stack: 79 , 61 IDENTIFIER 45 ( 25 get 11 <Statement> 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 79, symbol: ",", mem addr: 0, opt lexeme: }, { state: 61, symbol: "IDENTIFIER", mem addr: 2001, opt lexeme: low}, { state: 45, symbol: "(", mem addr: 0, opt lexeme: }, { state: 25, symbol: "get", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: IDENTIFIER ,      lexeme: high
Shifting: "IDENTIFIER", next state: 61

transition number: [ 61 ]
current stack: 61 IDENTIFIER 79 , 61 IDENTIFIER 45 ( 25 get 11 <Statement> 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 61, symbol: "IDENTIFIER", mem addr: 2002, opt lexeme: high}, { state: 79, symbol: ",", mem addr: 0, opt lexeme: }, { state: 61, symbol: "IDENTIFIER", mem addr: 2001, opt lexeme: low}, { state: 45, symbol: "(", mem addr: 0, opt lexeme: }, { state: 25, symbol: "get", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: SEPARATOR ,      lexeme: ,
Shifting: ",", next state: 79

transition number: [ 62 ]
current stack: 79 , 61 IDENTIFIER 79 , 61 IDENTIFIER 45 ( 25 get 11 <Statement> 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 79, symbol: ",", mem addr: 0, opt lexeme: }, { state: 61, symbol: "IDENTIFIER", mem addr: 2002, opt lexeme: high}, { state: 79, symbol: ",", mem addr: 0, opt lexeme: }, { state: 61, symbol: "IDENTIFIER", mem addr: 2001, opt lexeme: low}, { state: 45, symbol: "(", mem addr: 0, opt lexeme: }, { state: 25, symbol: "get", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: IDENTIFIER ,      lexeme: step$
Shifting: "IDENTIFIER", next state: 61

transition number: [ 63 ]
current stack: 61 IDENTIFIER 79 , 61 IDENTIFIER 79 , 61 IDENTIFIER 45 ( 25 get 11 <Statement> 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 61, symbol: "IDENTIFIER", mem addr: 2003, opt lexeme: step$}, { state: 79, symbol: ",", mem addr: 0, opt lexeme: }, { state: 61, symbol: "IDENTIFIER", mem addr: 2002, opt lexeme: high}, { state: 79, symbol: ",", mem addr: 0, opt lexeme: }, { state: 61, symbol: "IDENTIFIER", mem addr: 2001, opt lexeme: low}, { state: 45, symbol: "(", mem addr: 0, opt lexeme: }, { state: 25, symbol: "get", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: SEPARATOR ,      lexeme: )
Reducing: <IDs> => IDENTIFIER

transition number: [ 64 ]
current stack: 85 <IDs> 79 , 61 IDENTIFIER 79 , 61 IDENTIFIER 45 ( 25 get 11 <Statement> 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 85, symbol: "<IDs>", mem addr: 2011, opt lexeme: }, { state: 79, symbol: ",", mem addr: 0, opt lexeme: }, { state: 61, symbol: "IDENTIFIER", mem addr: 2002, opt lexeme: high}, { state: 79, symbol: ",", mem addr: 0, opt lexeme: }, { state: 61, symbol: "IDENTIFIER", mem addr: 2001, opt lexeme: low}, { state: 45, symbol: "(", mem addr: 0, opt lexeme: }, { state: 25, symbol: "get", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: SEPARATOR ,      lexeme: )
Reducing: <IDs> => IDENTIFIER , <IDs>

transition number: [ 65 ]
current stack: 85 <IDs> 79 , 61 IDENTIFIER 45 ( 25 get 11 <Statement> 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 85, symbol: "<IDs>", mem addr: 2011, opt lexeme: }, { state: 79, symbol: ",", mem addr: 0, opt lexeme: }, { state: 61, symbol: "IDENTIFIER", mem addr: 2001, opt lexeme: low}, { state: 45, symbol: "(", mem addr: 0, opt lexeme: }, { state: 25, symbol: "get", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: SEPARATOR ,      lexeme: )
Reducing: <IDs> => IDENTIFIER , <IDs>

transition number: [ 66 ]
current stack: 60 <IDs> 45 ( 25 get 11 <Statement> 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 60, symbol: "<IDs>", mem addr: 2011, opt lexeme: }, { state: 45, symbol: "(", mem addr: 0, opt lexeme: }, { state: 25, symbol: "get", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: SEPARATOR ,      lexeme: )
Shifting: ")", next state: 78

transition number: [ 67 ]
current stack: 78 ) 60 <IDs> 45 ( 25 get 11 <Statement> 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 78, symbol: ")", mem addr: 0, opt lexeme: }, { state: 60, symbol: "<IDs>", mem addr: 2011, opt lexeme: }, { state: 45, symbol: "(", mem addr: 0, opt lexeme: }, { state: 25, symbol: "get", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: SEPARATOR ,      lexeme: ;
Shifting: ";", next state: 84

transition number: [ 68 ]
current stack: 84 ; 78 ) 60 <IDs> 45 ( 25 get 11 <Statement> 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 84, symbol: ";", mem addr: 0, opt lexeme: }, { state: 78, symbol: ")", mem addr: 0, opt lexeme: }, { state: 60, symbol: "<IDs>", mem addr: 2011, opt lexeme: }, { state: 45, symbol: "(", mem addr: 0, opt lexeme: }, { state: 25, symbol: "get", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: KEYWORD ,      lexeme: put
Reducing: <Scan> => get ( <IDs> ) ;

transition number: [ 69 ]
current stack: 17 <Scan> 11 <Statement> 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 17, symbol: "<Scan>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: KEYWORD ,      lexeme: put
Reducing: <Statement> => <Scan>

transition number: [ 70 ]
current stack: 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: KEYWORD ,      lexeme: put
Shifting: "put", next state: 24

transition number: [ 71 ]
current stack: 24 put 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 24, symbol: "put", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: SEPARATOR ,      lexeme: (
Shifting: "(", next state: 44

transition number: [ 72 ]
current stack: 44 ( 24 put 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 44, symbol: "(", mem addr: 0, opt lexeme: }, { state: 24, symbol: "put", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: SEPARATOR ,      lexeme: (
Shifting: "(", next state: 41

transition number: [ 73 ]
current stack: 41 ( 44 ( 24 put 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 41, symbol: "(", mem addr: 0, opt lexeme: }, { state: 44, symbol: "(", mem addr: 0, opt lexeme: }, { state: 24, symbol: "put", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: IDENTIFIER ,      lexeme: high
Shifting: "IDENTIFIER", next state: 39

transition number: [ 74 ]
current stack: 39 IDENTIFIER 41 ( 44 ( 24 put 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 39, symbol: "IDENTIFIER", mem addr: 2002, opt lexeme: high}, { state: 41, symbol: "(", mem addr: 0, opt lexeme: }, { state: 44, symbol: "(", mem addr: 0, opt lexeme: }, { state: 24, symbol: "put", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: OPERATOR ,      lexeme: +
Reducing: <Primary> => IDENTIFIER

transition number: [ 75 ]
current stack: 38 <Primary> 41 ( 44 ( 24 put 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 38, symbol: "<Primary>", mem addr: 2002, opt lexeme: }, { state: 41, symbol: "(", mem addr: 0, opt lexeme: }, { state: 44, symbol: "(", mem addr: 0, opt lexeme: }, { state: 24, symbol: "put", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: OPERATOR ,      lexeme: +
Reducing: <Factor> => <Primary>

transition number: [ 76 ]
current stack: 36 <Factor> 41 ( 44 ( 24 put 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 36, symbol: "<Factor>", mem addr: 2002, opt lexeme: }, { state: 41, symbol: "(", mem addr: 0, opt lexeme: }, { state: 44, symbol: "(", mem addr: 0, opt lexeme: }, { state: 24, symbol: "put", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: OPERATOR ,      lexeme: +
Reducing: <Term> => <Factor>

transition number: [ 77 ]
current stack: 35 <Term> 41 ( 44 ( 24 put 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 35, symbol: "<Term>", mem addr: 2002, opt lexeme: }, { state: 41, symbol: "(", mem addr: 0, opt lexeme: }, { state: 44, symbol: "(", mem addr: 0, opt lexeme: }, { state: 24, symbol: "put", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: OPERATOR ,      lexeme: +
Reducing: <Expression> => <Term>

transition number: [ 78 ]
current stack: 58 <Expression> 41 ( 44 ( 24 put 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 58, symbol: "<Expression>", mem addr: 2002, opt lexeme: }, { state: 41, symbol: "(", mem addr: 0, opt lexeme: }, { state: 44, symbol: "(", mem addr: 0, opt lexeme: }, { state: 24, symbol: "put", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: OPERATOR ,      lexeme: +
Shifting: "+", next state: 53

transition number: [ 79 ]
current stack: 53 + 58 <Expression> 41 ( 44 ( 24 put 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 53, symbol: "+", mem addr: 0, opt lexeme: }, { state: 58, symbol: "<Expression>", mem addr: 2002, opt lexeme: }, { state: 41, symbol: "(", mem addr: 0, opt lexeme: }, { state: 44, symbol: "(", mem addr: 0, opt lexeme: }, { state: 24, symbol: "put", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: IDENTIFIER ,      lexeme: low
Shifting: "IDENTIFIER", next state: 39

transition number: [ 80 ]
current stack: 39 IDENTIFIER 53 + 58 <Expression> 41 ( 44 ( 24 put 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 39, symbol: "IDENTIFIER", mem addr: 2001, opt lexeme: low}, { state: 53, symbol: "+", mem addr: 0, opt lexeme: }, { state: 58, symbol: "<Expression>", mem addr: 2002, opt lexeme: }, { state: 41, symbol: "(", mem addr: 0, opt lexeme: }, { state: 44, symbol: "(", mem addr: 0, opt lexeme: }, { state: 24, symbol: "put", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: SEPARATOR ,      lexeme: )
Reducing: <Primary> => IDENTIFIER

transition number: [ 81 ]
current stack: 38 <Primary> 53 + 58 <Expression> 41 ( 44 ( 24 put 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 38, symbol: "<Primary>", mem addr: 2001, opt lexeme: }, { state: 53, symbol: "+", mem addr: 0, opt lexeme: }, { state: 58, symbol: "<Expression>", mem addr: 2002, opt lexeme: }, { state: 41, symbol: "(", mem addr: 0, opt lexeme: }, { state: 44, symbol: "(", mem addr: 0, opt lexeme: }, { state: 24, symbol: "put", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: SEPARATOR ,      lexeme: )
Reducing: <Factor> => <Primary>

transition number: [ 82 ]
current stack: 36 <Factor> 53 + 58 <Expression> 41 ( 44 ( 24 put 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 36, symbol: "<Factor>", mem addr: 2001, opt lexeme: }, { state: 53, symbol: "+", mem addr: 0, opt lexeme: }, { state: 58, symbol: "<Expression>", mem addr: 2002, opt lexeme: }, { state: 41, symbol: "(", mem addr: 0, opt lexeme: }, { state: 44, symbol: "(", mem addr: 0, opt lexeme: }, { state: 24, symbol: "put", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: SEPARATOR ,      lexeme: )
Reducing: <Term> => <Factor>

transition number: [ 83 ]
current stack: 72 <Term> 53 + 58 <Expression> 41 ( 44 ( 24 put 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 72, symbol: "<Term>", mem addr: 2001, opt lexeme: }, { state: 53, symbol: "+", mem addr: 0, opt lexeme: }, { state: 58, symbol: "<Expression>", mem addr: 2002, opt lexeme: }, { state: 41, symbol: "(", mem addr: 0, opt lexeme: }, { state: 44, symbol: "(", mem addr: 0, opt lexeme: }, { state: 24, symbol: "put", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: SEPARATOR ,      lexeme: )
Reducing: <Expression> => <Expression> + <Term>

transition number: [ 84 ]
current stack: 58 <Expression> 41 ( 44 ( 24 put 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 58, symbol: "<Expression>", mem addr: 2012, opt lexeme: }, { state: 41, symbol: "(", mem addr: 0, opt lexeme: }, { state: 44, symbol: "(", mem addr: 0, opt lexeme: }, { state: 24, symbol: "put", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: SEPARATOR ,      lexeme: )
Shifting: ")", next state: 76

transition number: [ 85 ]
current stack: 76 ) 58 <Expression> 41 ( 44 ( 24 put 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 76, symbol: ")", mem addr: 0, opt lexeme: }, { state: 58, symbol: "<Expression>", mem addr: 2012, opt lexeme: }, { state: 41, symbol: "(", mem addr: 0, opt lexeme: }, { state: 44, symbol: "(", mem addr: 0, opt lexeme: }, { state: 24, symbol: "put", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: SEPARATOR ,      lexeme: )
Reducing: <Primary> => ( <Expression> )

transition number: [ 86 ]
current stack: 38 <Primary> 44 ( 24 put 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 38, symbol: "<Primary>", mem addr: 2012, opt lexeme: }, { state: 44, symbol: "(", mem addr: 0, opt lexeme: }, { state: 24, symbol: "put", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: SEPARATOR ,      lexeme: )
Reducing: <Factor> => <Primary>

transition number: [ 87 ]
current stack: 36 <Factor> 44 ( 24 put 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 36, symbol: "<Factor>", mem addr: 2012, opt lexeme: }, { state: 44, symbol: "(", mem addr: 0, opt lexeme: }, { state: 24, symbol: "put", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: SEPARATOR ,      lexeme: )
Reducing: <Term> => <Factor>

transition number: [ 88 ]
current stack: 35 <Term> 44 ( 24 put 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 35, symbol: "<Term>", mem addr: 2012, opt lexeme: }, { state: 44, symbol: "(", mem addr: 0, opt lexeme: }, { state: 24, symbol: "put", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: SEPARATOR ,      lexeme: )
Reducing: <Expression> => <Term>

transition number: [ 89 ]
current stack: 34 <Expression> 44 ( 24 put 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 34, symbol: "<Expression>", mem addr: 2012, opt lexeme: }, { state: 44, symbol: "(", mem addr: 0, opt lexeme: }, { state: 24, symbol: "put", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: SEPARATOR ,      lexeme: )
Shifting: ")", next state: 77

transition number: [ 90 ]
current stack: 77 ) 34 <Expression> 44 ( 24 put 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 77, symbol: ")", mem addr: 0, opt lexeme: }, { state: 34, symbol: "<Expression>", mem addr: 2012, opt lexeme: }, { state: 44, symbol: "(", mem addr: 0, opt lexeme: }, { state: 24, symbol: "put", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: SEPARATOR ,      lexeme: ;
Shifting: ";", next state: 83

transition number: [ 91 ]
current stack: 83 ; 77 ) 34 <Expression> 44 ( 24 put 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 83, symbol: ";", mem addr: 0, opt lexeme: }, { state: 77, symbol: ")", mem addr: 0, opt lexeme: }, { state: 34, symbol: "<Expression>", mem addr: 2012, opt lexeme: }, { state: 44, symbol: "(", mem addr: 0, opt lexeme: }, { state: 24, symbol: "put", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: KEYWORD ,      lexeme: put
Reducing: <Print> => put ( <Expression> ) ;

transition number: [ 92 ]
current stack: 16 <Print> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 16, symbol: "<Print>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: KEYWORD ,      lexeme: put
Reducing: <Statement> => <Print>

transition number: [ 93 ]
current stack: 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: KEYWORD ,      lexeme: put
Shifting: "put", next state: 24

transition number: [ 94 ]
current stack: 24 put 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 24, symbol: "put", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: SEPARATOR ,      lexeme: (
Shifting: "(", next state: 44

transition number: [ 95 ]
current stack: 44 ( 24 put 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 44, symbol: "(", mem addr: 0, opt lexeme: }, { state: 24, symbol: "put", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: SEPARATOR ,      lexeme: (
Shifting: "(", next state: 41

transition number: [ 96 ]
current stack: 41 ( 44 ( 24 put 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 41, symbol: "(", mem addr: 0, opt lexeme: }, { state: 44, symbol: "(", mem addr: 0, opt lexeme: }, { state: 24, symbol: "put", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: IDENTIFIER ,      lexeme: high
Shifting: "IDENTIFIER", next state: 39

transition number: [ 97 ]
current stack: 39 IDENTIFIER 41 ( 44 ( 24 put 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 39, symbol: "IDENTIFIER", mem addr: 2002, opt lexeme: high}, { state: 41, symbol: "(", mem addr: 0, opt lexeme: }, { state: 44, symbol: "(", mem addr: 0, opt lexeme: }, { state: 24, symbol: "put", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: OPERATOR ,      lexeme: -
Reducing: <Primary> => IDENTIFIER

transition number: [ 98 ]
current stack: 38 <Primary> 41 ( 44 ( 24 put 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 38, symbol: "<Primary>", mem addr: 2002, opt lexeme: }, { state: 41, symbol: "(", mem addr: 0, opt lexeme: }, { state: 44, symbol: "(", mem addr: 0, opt lexeme: }, { state: 24, symbol: "put", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: OPERATOR ,      lexeme: -
Reducing: <Factor> => <Primary>

transition number: [ 99 ]
current stack: 36 <Factor> 41 ( 44 ( 24 put 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 36, symbol: "<Factor>", mem addr: 2002, opt lexeme: }, { state: 41, symbol: "(", mem addr: 0, opt lexeme: }, { state: 44, symbol: "(", mem addr: 0, opt lexeme: }, { state: 24, symbol: "put", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: OPERATOR ,      lexeme: -
Reducing: <Term> => <Factor>

transition number: [ 100 ]
current stack: 35 <Term> 41 ( 44 ( 24 put 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 35, symbol: "<Term>", mem addr: 2002, opt lexeme: }, { state: 41, symbol: "(", mem addr: 0, opt lexeme: }, { state: 44, symbol: "(", mem addr: 0, opt lexeme: }, { state: 24, symbol: "put", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: OPERATOR ,      lexeme: -
Reducing: <Expression> => <Term>

transition number: [ 101 ]
current stack: 58 <Expression> 41 ( 44 ( 24 put 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 58, symbol: "<Expression>", mem addr: 2002, opt lexeme: }, { state: 41, symbol: "(", mem addr: 0, opt lexeme: }, { state: 44, symbol: "(", mem addr: 0, opt lexeme: }, { state: 24, symbol: "put", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: OPERATOR ,      lexeme: -
Shifting: "-", next state: 54

transition number: [ 102 ]
current stack: 54 - 58 <Expression> 41 ( 44 ( 24 put 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 54, symbol: "-", mem addr: 0, opt lexeme: }, { state: 58, symbol: "<Expression>", mem addr: 2002, opt lexeme: }, { state: 41, symbol: "(", mem addr: 0, opt lexeme: }, { state: 44, symbol: "(", mem addr: 0, opt lexeme: }, { state: 24, symbol: "put", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: IDENTIFIER ,      lexeme: low
Shifting: "IDENTIFIER", next state: 39

transition number: [ 103 ]
current stack: 39 IDENTIFIER 54 - 58 <Expression> 41 ( 44 ( 24 put 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 39, symbol: "IDENTIFIER", mem addr: 2001, opt lexeme: low}, { state: 54, symbol: "-", mem addr: 0, opt lexeme: }, { state: 58, symbol: "<Expression>", mem addr: 2002, opt lexeme: }, { state: 41, symbol: "(", mem addr: 0, opt lexeme: }, { state: 44, symbol: "(", mem addr: 0, opt lexeme: }, { state: 24, symbol: "put", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: SEPARATOR ,      lexeme: )
Reducing: <Primary> => IDENTIFIER

transition number: [ 104 ]
current stack: 38 <Primary> 54 - 58 <Expression> 41 ( 44 ( 24 put 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 38, symbol: "<Primary>", mem addr: 2001, opt lexeme: }, { state: 54, symbol: "-", mem addr: 0, opt lexeme: }, { state: 58, symbol: "<Expression>", mem addr: 2002, opt lexeme: }, { state: 41, symbol: "(", mem addr: 0, opt lexeme: }, { state: 44, symbol: "(", mem addr: 0, opt lexeme: }, { state: 24, symbol: "put", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: SEPARATOR ,      lexeme: )
Reducing: <Factor> => <Primary>

transition number: [ 105 ]
current stack: 36 <Factor> 54 - 58 <Expression> 41 ( 44 ( 24 put 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 36, symbol: "<Factor>", mem addr: 2001, opt lexeme: }, { state: 54, symbol: "-", mem addr: 0, opt lexeme: }, { state: 58, symbol: "<Expression>", mem addr: 2002, opt lexeme: }, { state: 41, symbol: "(", mem addr: 0, opt lexeme: }, { state: 44, symbol: "(", mem addr: 0, opt lexeme: }, { state: 24, symbol: "put", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: SEPARATOR ,      lexeme: )
Reducing: <Term> => <Factor>

transition number: [ 106 ]
current stack: 73 <Term> 54 - 58 <Expression> 41 ( 44 ( 24 put 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 73, symbol: "<Term>", mem addr: 2001, opt lexeme: }, { state: 54, symbol: "-", mem addr: 0, opt lexeme: }, { state: 58, symbol: "<Expression>", mem addr: 2002, opt lexeme: }, { state: 41, symbol: "(", mem addr: 0, opt lexeme: }, { state: 44, symbol: "(", mem addr: 0, opt lexeme: }, { state: 24, symbol: "put", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: SEPARATOR ,      lexeme: )
Reducing: <Expression> => <Expression> - <Term>

transition number: [ 107 ]
current stack: 58 <Expression> 41 ( 44 ( 24 put 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 58, symbol: "<Expression>", mem addr: 2013, opt lexeme: }, { state: 41, symbol: "(", mem addr: 0, opt lexeme: }, { state: 44, symbol: "(", mem addr: 0, opt lexeme: }, { state: 24, symbol: "put", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: SEPARATOR ,      lexeme: )
Shifting: ")", next state: 76

transition number: [ 108 ]
current stack: 76 ) 58 <Expression> 41 ( 44 ( 24 put 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 76, symbol: ")", mem addr: 0, opt lexeme: }, { state: 58, symbol: "<Expression>", mem addr: 2013, opt lexeme: }, { state: 41, symbol: "(", mem addr: 0, opt lexeme: }, { state: 44, symbol: "(", mem addr: 0, opt lexeme: }, { state: 24, symbol: "put", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: SEPARATOR ,      lexeme: )
Reducing: <Primary> => ( <Expression> )

transition number: [ 109 ]
current stack: 38 <Primary> 44 ( 24 put 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 38, symbol: "<Primary>", mem addr: 2013, opt lexeme: }, { state: 44, symbol: "(", mem addr: 0, opt lexeme: }, { state: 24, symbol: "put", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: SEPARATOR ,      lexeme: )
Reducing: <Factor> => <Primary>

transition number: [ 110 ]
current stack: 36 <Factor> 44 ( 24 put 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 36, symbol: "<Factor>", mem addr: 2013, opt lexeme: }, { state: 44, symbol: "(", mem addr: 0, opt lexeme: }, { state: 24, symbol: "put", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: SEPARATOR ,      lexeme: )
Reducing: <Term> => <Factor>

transition number: [ 111 ]
current stack: 35 <Term> 44 ( 24 put 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 35, symbol: "<Term>", mem addr: 2013, opt lexeme: }, { state: 44, symbol: "(", mem addr: 0, opt lexeme: }, { state: 24, symbol: "put", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: SEPARATOR ,      lexeme: )
Reducing: <Expression> => <Term>

transition number: [ 112 ]
current stack: 34 <Expression> 44 ( 24 put 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 34, symbol: "<Expression>", mem addr: 2013, opt lexeme: }, { state: 44, symbol: "(", mem addr: 0, opt lexeme: }, { state: 24, symbol: "put", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: SEPARATOR ,      lexeme: )
Shifting: ")", next state: 77

transition number: [ 113 ]
current stack: 77 ) 34 <Expression> 44 ( 24 put 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 77, symbol: ")", mem addr: 0, opt lexeme: }, { state: 34, symbol: "<Expression>", mem addr: 2013, opt lexeme: }, { state: 44, symbol: "(", mem addr: 0, opt lexeme: }, { state: 24, symbol: "put", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: SEPARATOR ,      lexeme: ;
Shifting: ";", next state: 83

transition number: [ 114 ]
current stack: 83 ; 77 ) 34 <Expression> 44 ( 24 put 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 83, symbol: ";", mem addr: 0, opt lexeme: }, { state: 77, symbol: ")", mem addr: 0, opt lexeme: }, { state: 34, symbol: "<Expression>", mem addr: 2013, opt lexeme: }, { state: 44, symbol: "(", mem addr: 0, opt lexeme: }, { state: 24, symbol: "put", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: KEYWORD ,      lexeme: put
Reducing: <Print> => put ( <Expression> ) ;

transition number: [ 115 ]
current stack: 16 <Print> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 16, symbol: "<Print>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: KEYWORD ,      lexeme: put
Reducing: <Statement> => <Print>

transition number: [ 116 ]
current stack: 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: KEYWORD ,      lexeme: put
Shifting: "put", next state: 24

transition number: [ 117 ]
current stack: 24 put 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 24, symbol: "put", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: SEPARATOR ,      lexeme: (
Shifting: "(", next state: 44

transition number: [ 118 ]
current stack: 44 ( 24 put 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 44, symbol: "(", mem addr: 0, opt lexeme: }, { state: 24, symbol: "put", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: SEPARATOR ,      lexeme: (
Shifting: "(", next state: 41

transition number: [ 119 ]
current stack: 41 ( 44 ( 24 put 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 41, symbol: "(", mem addr: 0, opt lexeme: }, { state: 44, symbol: "(", mem addr: 0, opt lexeme: }, { state: 24, symbol: "put", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: IDENTIFIER ,      lexeme: high
Shifting: "IDENTIFIER", next state: 39

transition number: [ 120 ]
current stack: 39 IDENTIFIER 41 ( 44 ( 24 put 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 39, symbol: "IDENTIFIER", mem addr: 2002, opt lexeme: high}, { state: 41, symbol: "(", mem addr: 0, opt lexeme: }, { state: 44, symbol: "(", mem addr: 0, opt lexeme: }, { state: 24, symbol: "put", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: OPERATOR ,      lexeme: /
Reducing: <Primary> => IDENTIFIER

transition number: [ 121 ]
current stack: 38 <Primary> 41 ( 44 ( 24 put 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 38, symbol: "<Primary>", mem addr: 2002, opt lexeme: }, { state: 41, symbol: "(", mem addr: 0, opt lexeme: }, { state: 44, symbol: "(", mem addr: 0, opt lexeme: }, { state: 24, symbol: "put", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: OPERATOR ,      lexeme: /
Reducing: <Factor> => <Primary>

transition number: [ 122 ]
current stack: 36 <Factor> 41 ( 44 ( 24 put 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 36, symbol: "<Factor>", mem addr: 2002, opt lexeme: }, { state: 41, symbol: "(", mem addr: 0, opt lexeme: }, { state: 44, symbol: "(", mem addr: 0, opt lexeme: }, { state: 24, symbol: "put", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: OPERATOR ,      lexeme: /
Reducing: <Term> => <Factor>

transition number: [ 123 ]
current stack: 35 <Term> 41 ( 44 ( 24 put 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 35, symbol: "<Term>", mem addr: 2002, opt lexeme: }, { state: 41, symbol: "(", mem addr: 0, opt lexeme: }, { state: 44, symbol: "(", mem addr: 0, opt lexeme: }, { state: 24, symbol: "put", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: OPERATOR ,      lexeme: /
Shifting: "/", next state: 56

transition number: [ 124 ]
current stack: 56 / 35 <Term> 41 ( 44 ( 24 put 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 56, symbol: "/", mem addr: 0, opt lexeme: }, { state: 35, symbol: "<Term>", mem addr: 2002, opt lexeme: }, { state: 41, symbol: "(", mem addr: 0, opt lexeme: }, { state: 44, symbol: "(", mem addr: 0, opt lexeme: }, { state: 24, symbol: "put", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: IDENTIFIER ,      lexeme: low
Shifting: "IDENTIFIER", next state: 39

transition number: [ 125 ]
current stack: 39 IDENTIFIER 56 / 35 <Term> 41 ( 44 ( 24 put 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 39, symbol: "IDENTIFIER", mem addr: 2001, opt lexeme: low}, { state: 56, symbol: "/", mem addr: 0, opt lexeme: }, { state: 35, symbol: "<Term>", mem addr: 2002, opt lexeme: }, { state: 41, symbol: "(", mem addr: 0, opt lexeme: }, { state: 44, symbol: "(", mem addr: 0, opt lexeme: }, { state: 24, symbol: "put", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: SEPARATOR ,      lexeme: )
Reducing: <Primary> => IDENTIFIER

transition number: [ 126 ]
current stack: 38 <Primary> 56 / 35 <Term> 41 ( 44 ( 24 put 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 38, symbol: "<Primary>", mem addr: 2001, opt lexeme: }, { state: 56, symbol: "/", mem addr: 0, opt lexeme: }, { state: 35, symbol: "<Term>", mem addr: 2002, opt lexeme: }, { state: 41, symbol: "(", mem addr: 0, opt lexeme: }, { state: 44, symbol: "(", mem addr: 0, opt lexeme: }, { state: 24, symbol: "put", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: SEPARATOR ,      lexeme: )
Reducing: <Factor> => <Primary>

transition number: [ 127 ]
current stack: 75 <Factor> 56 / 35 <Term> 41 ( 44 ( 24 put 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 75, symbol: "<Factor>", mem addr: 2001, opt lexeme: }, { state: 56, symbol: "/", mem addr: 0, opt lexeme: }, { state: 35, symbol: "<Term>", mem addr: 2002, opt lexeme: }, { state: 41, symbol: "(", mem addr: 0, opt lexeme: }, { state: 44, symbol: "(", mem addr: 0, opt lexeme: }, { state: 24, symbol: "put", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: SEPARATOR ,      lexeme: )
Reducing: <Term> => <Term> / <Factor>

transition number: [ 128 ]
current stack: 35 <Term> 41 ( 44 ( 24 put 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 35, symbol: "<Term>", mem addr: 2014, opt lexeme: }, { state: 41, symbol: "(", mem addr: 0, opt lexeme: }, { state: 44, symbol: "(", mem addr: 0, opt lexeme: }, { state: 24, symbol: "put", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: SEPARATOR ,      lexeme: )
Reducing: <Expression> => <Term>

transition number: [ 129 ]
current stack: 58 <Expression> 41 ( 44 ( 24 put 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 58, symbol: "<Expression>", mem addr: 2014, opt lexeme: }, { state: 41, symbol: "(", mem addr: 0, opt lexeme: }, { state: 44, symbol: "(", mem addr: 0, opt lexeme: }, { state: 24, symbol: "put", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: SEPARATOR ,      lexeme: )
Shifting: ")", next state: 76

transition number: [ 130 ]
current stack: 76 ) 58 <Expression> 41 ( 44 ( 24 put 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 76, symbol: ")", mem addr: 0, opt lexeme: }, { state: 58, symbol: "<Expression>", mem addr: 2014, opt lexeme: }, { state: 41, symbol: "(", mem addr: 0, opt lexeme: }, { state: 44, symbol: "(", mem addr: 0, opt lexeme: }, { state: 24, symbol: "put", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: SEPARATOR ,      lexeme: )
Reducing: <Primary> => ( <Expression> )

transition number: [ 131 ]
current stack: 38 <Primary> 44 ( 24 put 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 38, symbol: "<Primary>", mem addr: 2014, opt lexeme: }, { state: 44, symbol: "(", mem addr: 0, opt lexeme: }, { state: 24, symbol: "put", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: SEPARATOR ,      lexeme: )
Reducing: <Factor> => <Primary>

transition number: [ 132 ]
current stack: 36 <Factor> 44 ( 24 put 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 36, symbol: "<Factor>", mem addr: 2014, opt lexeme: }, { state: 44, symbol: "(", mem addr: 0, opt lexeme: }, { state: 24, symbol: "put", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: SEPARATOR ,      lexeme: )
Reducing: <Term> => <Factor>

transition number: [ 133 ]
current stack: 35 <Term> 44 ( 24 put 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 35, symbol: "<Term>", mem addr: 2014, opt lexeme: }, { state: 44, symbol: "(", mem addr: 0, opt lexeme: }, { state: 24, symbol: "put", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: SEPARATOR ,      lexeme: )
Reducing: <Expression> => <Term>

transition number: [ 134 ]
current stack: 34 <Expression> 44 ( 24 put 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 34, symbol: "<Expression>", mem addr: 2014, opt lexeme: }, { state: 44, symbol: "(", mem addr: 0, opt lexeme: }, { state: 24, symbol: "put", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: SEPARATOR ,      lexeme: )
Shifting: ")", next state: 77

transition number: [ 135 ]
current stack: 77 ) 34 <Expression> 44 ( 24 put 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 77, symbol: ")", mem addr: 0, opt lexeme: }, { state: 34, symbol: "<Expression>", mem addr: 2014, opt lexeme: }, { state: 44, symbol: "(", mem addr: 0, opt lexeme: }, { state: 24, symbol: "put", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: SEPARATOR ,      lexeme: ;
Shifting: ";", next state: 83

transition number: [ 136 ]
current stack: 83 ; 77 ) 34 <Expression> 44 ( 24 put 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 83, symbol: ";", mem addr: 0, opt lexeme: }, { state: 77, symbol: ")", mem addr: 0, opt lexeme: }, { state: 34, symbol: "<Expression>", mem addr: 2014, opt lexeme: }, { state: 44, symbol: "(", mem addr: 0, opt lexeme: }, { state: 24, symbol: "put", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: KEYWORD ,      lexeme: put
Reducing: <Print> => put ( <Expression> ) ;

transition number: [ 137 ]
current stack: 16 <Print> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 16, symbol: "<Print>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: KEYWORD ,      lexeme: put
Reducing: <Statement> => <Print>

transition number: [ 138 ]
current stack: 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: KEYWORD ,      lexeme: put
Shifting: "put", next state: 24

transition number: [ 139 ]
current stack: 24 put 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 24, symbol: "put", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: SEPARATOR ,      lexeme: (
Shifting: "(", next state: 44

transition number: [ 140 ]
current stack: 44 ( 24 put 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 44, symbol: "(", mem addr: 0, opt lexeme: }, { state: 24, symbol: "put", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: SEPARATOR ,      lexeme: (
Shifting: "(", next state: 41

transition number: [ 141 ]
current stack: 41 ( 44 ( 24 put 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 41, symbol: "(", mem addr: 0, opt lexeme: }, { state: 44, symbol: "(", mem addr: 0, opt lexeme: }, { state: 24, symbol: "put", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: IDENTIFIER ,      lexeme: high
Shifting: "IDENTIFIER", next state: 39

transition number: [ 142 ]
current stack: 39 IDENTIFIER 41 ( 44 ( 24 put 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 39, symbol: "IDENTIFIER", mem addr: 2002, opt lexeme: high}, { state: 41, symbol: "(", mem addr: 0, opt lexeme: }, { state: 44, symbol: "(", mem addr: 0, opt lexeme: }, { state: 24, symbol: "put", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: OPERATOR ,      lexeme: *
Reducing: <Primary> => IDENTIFIER

transition number: [ 143 ]
current stack: 38 <Primary> 41 ( 44 ( 24 put 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 38, symbol: "<Primary>", mem addr: 2002, opt lexeme: }, { state: 41, symbol: "(", mem addr: 0, opt lexeme: }, { state: 44, symbol: "(", mem addr: 0, opt lexeme: }, { state: 24, symbol: "put", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: OPERATOR ,      lexeme: *
Reducing: <Factor> => <Primary>

transition number: [ 144 ]
current stack: 36 <Factor> 41 ( 44 ( 24 put 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 36, symbol: "<Factor>", mem addr: 2002, opt lexeme: }, { state: 41, symbol: "(", mem addr: 0, opt lexeme: }, { state: 44, symbol: "(", mem addr: 0, opt lexeme: }, { state: 24, symbol: "put", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: OPERATOR ,      lexeme: *
Reducing: <Term> => <Factor>

transition number: [ 145 ]
current stack: 35 <Term> 41 ( 44 ( 24 put 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 35, symbol: "<Term>", mem addr: 2002, opt lexeme: }, { state: 41, symbol: "(", mem addr: 0, opt lexeme: }, { state: 44, symbol: "(", mem addr: 0, opt lexeme: }, { state: 24, symbol: "put", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: OPERATOR ,      lexeme: *
Shifting: "*", next state: 55

transition number: [ 146 ]
current stack: 55 * 35 <Term> 41 ( 44 ( 24 put 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 55, symbol: "*", mem addr: 0, opt lexeme: }, { state: 35, symbol: "<Term>", mem addr: 2002, opt lexeme: }, { state: 41, symbol: "(", mem addr: 0, opt lexeme: }, { state: 44, symbol: "(", mem addr: 0, opt lexeme: }, { state: 24, symbol: "put", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: IDENTIFIER ,      lexeme: low
Shifting: "IDENTIFIER", next state: 39

transition number: [ 147 ]
current stack: 39 IDENTIFIER 55 * 35 <Term> 41 ( 44 ( 24 put 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 39, symbol: "IDENTIFIER", mem addr: 2001, opt lexeme: low}, { state: 55, symbol: "*", mem addr: 0, opt lexeme: }, { state: 35, symbol: "<Term>", mem addr: 2002, opt lexeme: }, { state: 41, symbol: "(", mem addr: 0, opt lexeme: }, { state: 44, symbol: "(", mem addr: 0, opt lexeme: }, { state: 24, symbol: "put", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: SEPARATOR ,      lexeme: )
Reducing: <Primary> => IDENTIFIER

transition number: [ 148 ]
current stack: 38 <Primary> 55 * 35 <Term> 41 ( 44 ( 24 put 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 38, symbol: "<Primary>", mem addr: 2001, opt lexeme: }, { state: 55, symbol: "*", mem addr: 0, opt lexeme: }, { state: 35, symbol: "<Term>", mem addr: 2002, opt lexeme: }, { state: 41, symbol: "(", mem addr: 0, opt lexeme: }, { state: 44, symbol: "(", mem addr: 0, opt lexeme: }, { state: 24, symbol: "put", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: SEPARATOR ,      lexeme: )
Reducing: <Factor> => <Primary>

transition number: [ 149 ]
current stack: 74 <Factor> 55 * 35 <Term> 41 ( 44 ( 24 put 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 74, symbol: "<Factor>", mem addr: 2001, opt lexeme: }, { state: 55, symbol: "*", mem addr: 0, opt lexeme: }, { state: 35, symbol: "<Term>", mem addr: 2002, opt lexeme: }, { state: 41, symbol: "(", mem addr: 0, opt lexeme: }, { state: 44, symbol: "(", mem addr: 0, opt lexeme: }, { state: 24, symbol: "put", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: SEPARATOR ,      lexeme: )
Reducing: <Term> => <Term> * <Factor>

transition number: [ 150 ]
current stack: 35 <Term> 41 ( 44 ( 24 put 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 35, symbol: "<Term>", mem addr: 2015, opt lexeme: }, { state: 41, symbol: "(", mem addr: 0, opt lexeme: }, { state: 44, symbol: "(", mem addr: 0, opt lexeme: }, { state: 24, symbol: "put", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: SEPARATOR ,      lexeme: )
Reducing: <Expression> => <Term>

transition number: [ 151 ]
current stack: 58 <Expression> 41 ( 44 ( 24 put 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 58, symbol: "<Expression>", mem addr: 2015, opt lexeme: }, { state: 41, symbol: "(", mem addr: 0, opt lexeme: }, { state: 44, symbol: "(", mem addr: 0, opt lexeme: }, { state: 24, symbol: "put", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: SEPARATOR ,      lexeme: )
Shifting: ")", next state: 76

transition number: [ 152 ]
current stack: 76 ) 58 <Expression> 41 ( 44 ( 24 put 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 76, symbol: ")", mem addr: 0, opt lexeme: }, { state: 58, symbol: "<Expression>", mem addr: 2015, opt lexeme: }, { state: 41, symbol: "(", mem addr: 0, opt lexeme: }, { state: 44, symbol: "(", mem addr: 0, opt lexeme: }, { state: 24, symbol: "put", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: SEPARATOR ,      lexeme: )
Reducing: <Primary> => ( <Expression> )

transition number: [ 153 ]
current stack: 38 <Primary> 44 ( 24 put 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 38, symbol: "<Primary>", mem addr: 2015, opt lexeme: }, { state: 44, symbol: "(", mem addr: 0, opt lexeme: }, { state: 24, symbol: "put", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: SEPARATOR ,      lexeme: )
Reducing: <Factor> => <Primary>

transition number: [ 154 ]
current stack: 36 <Factor> 44 ( 24 put 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 36, symbol: "<Factor>", mem addr: 2015, opt lexeme: }, { state: 44, symbol: "(", mem addr: 0, opt lexeme: }, { state: 24, symbol: "put", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: SEPARATOR ,      lexeme: )
Reducing: <Term> => <Factor>

transition number: [ 155 ]
current stack: 35 <Term> 44 ( 24 put 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 35, symbol: "<Term>", mem addr: 2015, opt lexeme: }, { state: 44, symbol: "(", mem addr: 0, opt lexeme: }, { state: 24, symbol: "put", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: SEPARATOR ,      lexeme: )
Reducing: <Expression> => <Term>

transition number: [ 156 ]
current stack: 34 <Expression> 44 ( 24 put 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 34, symbol: "<Expression>", mem addr: 2015, opt lexeme: }, { state: 44, symbol: "(", mem addr: 0, opt lexeme: }, { state: 24, symbol: "put", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: SEPARATOR ,      lexeme: )
Shifting: ")", next state: 77

transition number: [ 157 ]
current stack: 77 ) 34 <Expression> 44 ( 24 put 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 77, symbol: ")", mem addr: 0, opt lexeme: }, { state: 34, symbol: "<Expression>", mem addr: 2015, opt lexeme: }, { state: 44, symbol: "(", mem addr: 0, opt lexeme: }, { state: 24, symbol: "put", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: SEPARATOR ,      lexeme: ;
Shifting: ";", next state: 83

transition number: [ 158 ]
current stack: 83 ; 77 ) 34 <Expression> 44 ( 24 put 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 83, symbol: ";", mem addr: 0, opt lexeme: }, { state: 77, symbol: ")", mem addr: 0, opt lexeme: }, { state: 34, symbol: "<Expression>", mem addr: 2015, opt lexeme: }, { state: 44, symbol: "(", mem addr: 0, opt lexeme: }, { state: 24, symbol: "put", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: KEYWORD ,      lexeme: if
Reducing: <Print> => put ( <Expression> ) ;

transition number: [ 159 ]
current stack: 16 <Print> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 16, symbol: "<Print>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: KEYWORD ,      lexeme: if
Reducing: <Statement> => <Print>

transition number: [ 160 ]
current stack: 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: KEYWORD ,      lexeme: if
Shifting: "if", next state: 22

transition number: [ 161 ]
current stack: 22 if 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 22, symbol: "if", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: SEPARATOR ,      lexeme: (
Shifting: "(", next state: 32

transition number: [ 162 ]
current stack: 32 ( 22 if 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 32, symbol: "(", mem addr: 0, opt lexeme: }, { state: 22, symbol: "if", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: IDENTIFIER ,      lexeme: low
Shifting: "IDENTIFIER", next state: 39

transition number: [ 163 ]
current stack: 39 IDENTIFIER 32 ( 22 if 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 39, symbol: "IDENTIFIER", mem addr: 2001, opt lexeme: low}, { state: 32, symbol: "(", mem addr: 0, opt lexeme: }, { state: 22, symbol: "if", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: OPERATOR ,      lexeme: =>
Reducing: <Primary> => IDENTIFIER

transition number: [ 164 ]
current stack: 38 <Primary> 32 ( 22 if 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 38, symbol: "<Primary>", mem addr: 2001, opt lexeme: }, { state: 32, symbol: "(", mem addr: 0, opt lexeme: }, { state: 22, symbol: "if", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: OPERATOR ,      lexeme: =>
Reducing: <Factor> => <Primary>

transition number: [ 165 ]
current stack: 36 <Factor> 32 ( 22 if 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 36, symbol: "<Factor>", mem addr: 2001, opt lexeme: }, { state: 32, symbol: "(", mem addr: 0, opt lexeme: }, { state: 22, symbol: "if", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: OPERATOR ,      lexeme: =>
Reducing: <Term> => <Factor>

transition number: [ 166 ]
current stack: 35 <Term> 32 ( 22 if 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 35, symbol: "<Term>", mem addr: 2001, opt lexeme: }, { state: 32, symbol: "(", mem addr: 0, opt lexeme: }, { state: 22, symbol: "if", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: OPERATOR ,      lexeme: =>
Reducing: <Expression> => <Term>

transition number: [ 167 ]
current stack: 51 <Expression> 32 ( 22 if 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 51, symbol: "<Expression>", mem addr: 2001, opt lexeme: }, { state: 32, symbol: "(", mem addr: 0, opt lexeme: }, { state: 22, symbol: "if", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: OPERATOR ,      lexeme: =>
Shifting: "=>", next state: 70

transition number: [ 168 ]
current stack: 70 => 51 <Expression> 32 ( 22 if 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 70, symbol: "=>", mem addr: 0, opt lexeme: }, { state: 51, symbol: "<Expression>", mem addr: 2001, opt lexeme: }, { state: 32, symbol: "(", mem addr: 0, opt lexeme: }, { state: 22, symbol: "if", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: IDENTIFIER ,      lexeme: high
Reducing: <Relop> => =>

transition number: [ 169 ]
current stack: 65 <Relop> 51 <Expression> 32 ( 22 if 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 65, symbol: "<Relop>", mem addr: 0, opt lexeme: =>}, { state: 51, symbol: "<Expression>", mem addr: 2001, opt lexeme: }, { state: 32, symbol: "(", mem addr: 0, opt lexeme: }, { state: 22, symbol: "if", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: IDENTIFIER ,      lexeme: high
Shifting: "IDENTIFIER", next state: 39

transition number: [ 170 ]
current stack: 39 IDENTIFIER 65 <Relop> 51 <Expression> 32 ( 22 if 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 39, symbol: "IDENTIFIER", mem addr: 2002, opt lexeme: high}, { state: 65, symbol: "<Relop>", mem addr: 0, opt lexeme: =>}, { state: 51, symbol: "<Expression>", mem addr: 2001, opt lexeme: }, { state: 32, symbol: "(", mem addr: 0, opt lexeme: }, { state: 22, symbol: "if", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: SEPARATOR ,      lexeme: )
Reducing: <Primary> => IDENTIFIER

transition number: [ 171 ]
current stack: 38 <Primary> 65 <Relop> 51 <Expression> 32 ( 22 if 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 38, symbol: "<Primary>", mem addr: 2002, opt lexeme: }, { state: 65, symbol: "<Relop>", mem addr: 0, opt lexeme: =>}, { state: 51, symbol: "<Expression>", mem addr: 2001, opt lexeme: }, { state: 32, symbol: "(", mem addr: 0, opt lexeme: }, { state: 22, symbol: "if", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: SEPARATOR ,      lexeme: )
Reducing: <Factor> => <Primary>

transition number: [ 172 ]
current stack: 36 <Factor> 65 <Relop> 51 <Expression> 32 ( 22 if 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 36, symbol: "<Factor>", mem addr: 2002, opt lexeme: }, { state: 65, symbol: "<Relop>", mem addr: 0, opt lexeme: =>}, { state: 51, symbol: "<Expression>", mem addr: 2001, opt lexeme: }, { state: 32, symbol: "(", mem addr: 0, opt lexeme: }, { state: 22, symbol: "if", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: SEPARATOR ,      lexeme: )
Reducing: <Term> => <Factor>

transition number: [ 173 ]
current stack: 35 <Term> 65 <Relop> 51 <Expression> 32 ( 22 if 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 35, symbol: "<Term>", mem addr: 2002, opt lexeme: }, { state: 65, symbol: "<Relop>", mem addr: 0, opt lexeme: =>}, { state: 51, symbol: "<Expression>", mem addr: 2001, opt lexeme: }, { state: 32, symbol: "(", mem addr: 0, opt lexeme: }, { state: 22, symbol: "if", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: SEPARATOR ,      lexeme: )
Reducing: <Expression> => <Term>

transition number: [ 174 ]
current stack: 82 <Expression> 65 <Relop> 51 <Expression> 32 ( 22 if 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 82, symbol: "<Expression>", mem addr: 2002, opt lexeme: }, { state: 65, symbol: "<Relop>", mem addr: 0, opt lexeme: =>}, { state: 51, symbol: "<Expression>", mem addr: 2001, opt lexeme: }, { state: 32, symbol: "(", mem addr: 0, opt lexeme: }, { state: 22, symbol: "if", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: SEPARATOR ,      lexeme: )
Reducing: <Condition> => <Expression> <Relop> <Expression>

transition number: [ 175 ]
current stack: 50 <Condition> 32 ( 22 if 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 50, symbol: "<Condition>", mem addr: 0, opt lexeme: }, { state: 32, symbol: "(", mem addr: 0, opt lexeme: }, { state: 22, symbol: "if", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: SEPARATOR ,      lexeme: )
Shifting: ")", next state: 64

transition number: [ 176 ]
current stack: 64 ) 50 <Condition> 32 ( 22 if 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 64, symbol: ")", mem addr: 0, opt lexeme: }, { state: 50, symbol: "<Condition>", mem addr: 0, opt lexeme: }, { state: 32, symbol: "(", mem addr: 0, opt lexeme: }, { state: 22, symbol: "if", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: SEPARATOR ,      lexeme: {
Reducing: <If> => if ( <Condition> )

transition number: [ 177 ]
current stack: 90 <If> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 90, symbol: "<If>", mem addr: 2017, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: SEPARATOR ,      lexeme: {
Shifting: "{", next state: 20

transition number: [ 178 ]
current stack: 20 { 90 <If> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 20, symbol: "{", mem addr: 0, opt lexeme: }, { state: 90, symbol: "<If>", mem addr: 2017, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: KEYWORD ,      lexeme: put
Shifting: "put", next state: 24

transition number: [ 179 ]
current stack: 24 put 20 { 90 <If> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 24, symbol: "put", mem addr: 0, opt lexeme: }, { state: 20, symbol: "{", mem addr: 0, opt lexeme: }, { state: 90, symbol: "<If>", mem addr: 2017, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: SEPARATOR ,      lexeme: (
Shifting: "(", next state: 44

transition number: [ 180 ]
current stack: 44 ( 24 put 20 { 90 <If> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 44, symbol: "(", mem addr: 0, opt lexeme: }, { state: 24, symbol: "put", mem addr: 0, opt lexeme: }, { state: 20, symbol: "{", mem addr: 0, opt lexeme: }, { state: 90, symbol: "<If>", mem addr: 2017, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: IDENTIFIER ,      lexeme: high
Shifting: "IDENTIFIER", next state: 39

transition number: [ 181 ]
current stack: 39 IDENTIFIER 44 ( 24 put 20 { 90 <If> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 39, symbol: "IDENTIFIER", mem addr: 2002, opt lexeme: high}, { state: 44, symbol: "(", mem addr: 0, opt lexeme: }, { state: 24, symbol: "put", mem addr: 0, opt lexeme: }, { state: 20, symbol: "{", mem addr: 0, opt lexeme: }, { state: 90, symbol: "<If>", mem addr: 2017, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: SEPARATOR ,      lexeme: )
Reducing: <Primary> => IDENTIFIER

transition number: [ 182 ]
current stack: 38 <Primary> 44 ( 24 put 20 { 90 <If> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 38, symbol: "<Primary>", mem addr: 2002, opt lexeme: }, { state: 44, symbol: "(", mem addr: 0, opt lexeme: }, { state: 24, symbol: "put", mem addr: 0, opt lexeme: }, { state: 20, symbol: "{", mem addr: 0, opt lexeme: }, { state: 90, symbol: "<If>", mem addr: 2017, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: SEPARATOR ,      lexeme: )
Reducing: <Factor> => <Primary>

transition number: [ 183 ]
current stack: 36 <Factor> 44 ( 24 put 20 { 90 <If> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 36, symbol: "<Factor>", mem addr: 2002, opt lexeme: }, { state: 44, symbol: "(", mem addr: 0, opt lexeme: }, { state: 24, symbol: "put", mem addr: 0, opt lexeme: }, { state: 20, symbol: "{", mem addr: 0, opt lexeme: }, { state: 90, symbol: "<If>", mem addr: 2017, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: SEPARATOR ,      lexeme: )
Reducing: <Term> => <Factor>

transition number: [ 184 ]
current stack: 35 <Term> 44 ( 24 put 20 { 90 <If> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 35, symbol: "<Term>", mem addr: 2002, opt lexeme: }, { state: 44, symbol: "(", mem addr: 0, opt lexeme: }, { state: 24, symbol: "put", mem addr: 0, opt lexeme: }, { state: 20, symbol: "{", mem addr: 0, opt lexeme: }, { state: 90, symbol: "<If>", mem addr: 2017, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: SEPARATOR ,      lexeme: )
Reducing: <Expression> => <Term>

transition number: [ 185 ]
current stack: 34 <Expression> 44 ( 24 put 20 { 90 <If> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 34, symbol: "<Expression>", mem addr: 2002, opt lexeme: }, { state: 44, symbol: "(", mem addr: 0, opt lexeme: }, { state: 24, symbol: "put", mem addr: 0, opt lexeme: }, { state: 20, symbol: "{", mem addr: 0, opt lexeme: }, { state: 90, symbol: "<If>", mem addr: 2017, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: SEPARATOR ,      lexeme: )
Shifting: ")", next state: 77

transition number: [ 186 ]
current stack: 77 ) 34 <Expression> 44 ( 24 put 20 { 90 <If> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 77, symbol: ")", mem addr: 0, opt lexeme: }, { state: 34, symbol: "<Expression>", mem addr: 2002, opt lexeme: }, { state: 44, symbol: "(", mem addr: 0, opt lexeme: }, { state: 24, symbol: "put", mem addr: 0, opt lexeme: }, { state: 20, symbol: "{", mem addr: 0, opt lexeme: }, { state: 90, symbol: "<If>", mem addr: 2017, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: SEPARATOR ,      lexeme: ;
Shifting: ";", next state: 83

transition number: [ 187 ]
current stack: 83 ; 77 ) 34 <Expression> 44 ( 24 put 20 { 90 <If> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 83, symbol: ";", mem addr: 0, opt lexeme: }, { state: 77, symbol: ")", mem addr: 0, opt lexeme: }, { state: 34, symbol: "<Expression>", mem addr: 2002, opt lexeme: }, { state: 44, symbol: "(", mem addr: 0, opt lexeme: }, { state: 24, symbol: "put", mem addr: 0, opt lexeme: }, { state: 20, symbol: "{", mem addr: 0, opt lexeme: }, { state: 90, symbol: "<If>", mem addr: 2017, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: KEYWORD ,      lexeme: return
Reducing: <Print> => put ( <Expression> ) ;

transition number: [ 188 ]
current stack: 16 <Print> 20 { 90 <If> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 16, symbol: "<Print>", mem addr: 0, opt lexeme: }, { state: 20, symbol: "{", mem addr: 0, opt lexeme: }, { state: 90, symbol: "<If>", mem addr: 2017, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: KEYWORD ,      lexeme: return
Reducing: <Statement> => <Print>

transition number: [ 189 ]
current stack: 11 <Statement> 20 { 90 <If> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 20, symbol: "{", mem addr: 0, opt lexeme: }, { state: 90, symbol: "<If>", mem addr: 2017, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: KEYWORD ,      lexeme: return
Shifting: "return", next state: 23

transition number: [ 190 ]
current stack: 23 return 11 <Statement> 20 { 90 <If> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 23, symbol: "return", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 20, symbol: "{", mem addr: 0, opt lexeme: }, { state: 90, symbol: "<If>", mem addr: 2017, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: SEPARATOR ,      lexeme: ;
Shifting: ";", next state: 33

transition number: [ 191 ]
current stack: 33 ; 23 return 11 <Statement> 20 { 90 <If> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 33, symbol: ";", mem addr: 0, opt lexeme: }, { state: 23, symbol: "return", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 20, symbol: "{", mem addr: 0, opt lexeme: }, { state: 90, symbol: "<If>", mem addr: 2017, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: SEPARATOR ,      lexeme: }
Reducing: <Return> => return ;

transition number: [ 192 ]
current stack: 15 <Return> 11 <Statement> 20 { 90 <If> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 15, symbol: "<Return>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 20, symbol: "{", mem addr: 0, opt lexeme: }, { state: 90, symbol: "<If>", mem addr: 2017, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: SEPARATOR ,      lexeme: }
Reducing: <Statement> => <Return>

transition number: [ 193 ]
current stack: 11 <Statement> 11 <Statement> 20 { 90 <If> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 20, symbol: "{", mem addr: 0, opt lexeme: }, { state: 90, symbol: "<If>", mem addr: 2017, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: SEPARATOR ,      lexeme: }
Reducing: <Statement List> => <Statement>

transition number: [ 194 ]
current stack: 29 <Statement List> 11 <Statement> 20 { 90 <If> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 29, symbol: "<Statement List>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 20, symbol: "{", mem addr: 0, opt lexeme: }, { state: 90, symbol: "<If>", mem addr: 2017, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: SEPARATOR ,      lexeme: }
Reducing: <Statement List> => <Statement> <Statement List>

transition number: [ 195 ]
current stack: 30 <Statement List> 20 { 90 <If> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 30, symbol: "<Statement List>", mem addr: 0, opt lexeme: }, { state: 20, symbol: "{", mem addr: 0, opt lexeme: }, { state: 90, symbol: "<If>", mem addr: 2017, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: SEPARATOR ,      lexeme: }
Shifting: "}", next state: 48

transition number: [ 196 ]
current stack: 48 } 30 <Statement List> 20 { 90 <If> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 48, symbol: "}", mem addr: 0, opt lexeme: }, { state: 30, symbol: "<Statement List>", mem addr: 0, opt lexeme: }, { state: 20, symbol: "{", mem addr: 0, opt lexeme: }, { state: 90, symbol: "<If>", mem addr: 2017, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: KEYWORD ,      lexeme: else
Reducing: <Compound> => { <Statement List> }

transition number: [ 197 ]
current stack: 12 <Compound> 90 <If> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 12, symbol: "<Compound>", mem addr: 0, opt lexeme: }, { state: 90, symbol: "<If>", mem addr: 2017, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: KEYWORD ,      lexeme: else
Reducing: <Statement> => <Compound>

transition number: [ 198 ]
current stack: 81 <Statement> 90 <If> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 81, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 90, symbol: "<If>", mem addr: 2017, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: KEYWORD ,      lexeme: else
Shifting: "else", next state: 88

transition number: [ 199 ]
current stack: 88 else 81 <Statement> 90 <If> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 88, symbol: "else", mem addr: 0, opt lexeme: }, { state: 81, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 90, symbol: "<If>", mem addr: 2017, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: SEPARATOR ,      lexeme: {
Reducing: <IfElse> => <If> <Statement> else

transition number: [ 200 ]
current stack: 91 <IfElse> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 91, symbol: "<IfElse>", mem addr: 2018, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: SEPARATOR ,      lexeme: {
Shifting: "{", next state: 20

transition number: [ 201 ]
current stack: 20 { 91 <IfElse> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 20, symbol: "{", mem addr: 0, opt lexeme: }, { state: 91, symbol: "<IfElse>", mem addr: 2018, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: KEYWORD ,      lexeme: put
Shifting: "put", next state: 24

transition number: [ 202 ]
current stack: 24 put 20 { 91 <IfElse> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 24, symbol: "put", mem addr: 0, opt lexeme: }, { state: 20, symbol: "{", mem addr: 0, opt lexeme: }, { state: 91, symbol: "<IfElse>", mem addr: 2018, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: SEPARATOR ,      lexeme: (
Shifting: "(", next state: 44

transition number: [ 203 ]
current stack: 44 ( 24 put 20 { 91 <IfElse> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 44, symbol: "(", mem addr: 0, opt lexeme: }, { state: 24, symbol: "put", mem addr: 0, opt lexeme: }, { state: 20, symbol: "{", mem addr: 0, opt lexeme: }, { state: 91, symbol: "<IfElse>", mem addr: 2018, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: IDENTIFIER ,      lexeme: low
Shifting: "IDENTIFIER", next state: 39

transition number: [ 204 ]
current stack: 39 IDENTIFIER 44 ( 24 put 20 { 91 <IfElse> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 39, symbol: "IDENTIFIER", mem addr: 2001, opt lexeme: low}, { state: 44, symbol: "(", mem addr: 0, opt lexeme: }, { state: 24, symbol: "put", mem addr: 0, opt lexeme: }, { state: 20, symbol: "{", mem addr: 0, opt lexeme: }, { state: 91, symbol: "<IfElse>", mem addr: 2018, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: SEPARATOR ,      lexeme: )
Reducing: <Primary> => IDENTIFIER

transition number: [ 205 ]
current stack: 38 <Primary> 44 ( 24 put 20 { 91 <IfElse> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 38, symbol: "<Primary>", mem addr: 2001, opt lexeme: }, { state: 44, symbol: "(", mem addr: 0, opt lexeme: }, { state: 24, symbol: "put", mem addr: 0, opt lexeme: }, { state: 20, symbol: "{", mem addr: 0, opt lexeme: }, { state: 91, symbol: "<IfElse>", mem addr: 2018, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: SEPARATOR ,      lexeme: )
Reducing: <Factor> => <Primary>

transition number: [ 206 ]
current stack: 36 <Factor> 44 ( 24 put 20 { 91 <IfElse> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 36, symbol: "<Factor>", mem addr: 2001, opt lexeme: }, { state: 44, symbol: "(", mem addr: 0, opt lexeme: }, { state: 24, symbol: "put", mem addr: 0, opt lexeme: }, { state: 20, symbol: "{", mem addr: 0, opt lexeme: }, { state: 91, symbol: "<IfElse>", mem addr: 2018, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: SEPARATOR ,      lexeme: )
Reducing: <Term> => <Factor>

transition number: [ 207 ]
current stack: 35 <Term> 44 ( 24 put 20 { 91 <IfElse> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 35, symbol: "<Term>", mem addr: 2001, opt lexeme: }, { state: 44, symbol: "(", mem addr: 0, opt lexeme: }, { state: 24, symbol: "put", mem addr: 0, opt lexeme: }, { state: 20, symbol: "{", mem addr: 0, opt lexeme: }, { state: 91, symbol: "<IfElse>", mem addr: 2018, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: SEPARATOR ,      lexeme: )
Reducing: <Expression> => <Term>

transition number: [ 208 ]
current stack: 34 <Expression> 44 ( 24 put 20 { 91 <IfElse> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 34, symbol: "<Expression>", mem addr: 2001, opt lexeme: }, { state: 44, symbol: "(", mem addr: 0, opt lexeme: }, { state: 24, symbol: "put", mem addr: 0, opt lexeme: }, { state: 20, symbol: "{", mem addr: 0, opt lexeme: }, { state: 91, symbol: "<IfElse>", mem addr: 2018, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: SEPARATOR ,      lexeme: )
Shifting: ")", next state: 77

transition number: [ 209 ]
current stack: 77 ) 34 <Expression> 44 ( 24 put 20 { 91 <IfElse> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 77, symbol: ")", mem addr: 0, opt lexeme: }, { state: 34, symbol: "<Expression>", mem addr: 2001, opt lexeme: }, { state: 44, symbol: "(", mem addr: 0, opt lexeme: }, { state: 24, symbol: "put", mem addr: 0, opt lexeme: }, { state: 20, symbol: "{", mem addr: 0, opt lexeme: }, { state: 91, symbol: "<IfElse>", mem addr: 2018, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: SEPARATOR ,      lexeme: ;
Shifting: ";", next state: 83

transition number: [ 210 ]
current stack: 83 ; 77 ) 34 <Expression> 44 ( 24 put 20 { 91 <IfElse> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 83, symbol: ";", mem addr: 0, opt lexeme: }, { state: 77, symbol: ")", mem addr: 0, opt lexeme: }, { state: 34, symbol: "<Expression>", mem addr: 2001, opt lexeme: }, { state: 44, symbol: "(", mem addr: 0, opt lexeme: }, { state: 24, symbol: "put", mem addr: 0, opt lexeme: }, { state: 20, symbol: "{", mem addr: 0, opt lexeme: }, { state: 91, symbol: "<IfElse>", mem addr: 2018, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: SEPARATOR ,      lexeme: }
Reducing: <Print> => put ( <Expression> ) ;

transition number: [ 211 ]
current stack: 16 <Print> 20 { 91 <IfElse> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 16, symbol: "<Print>", mem addr: 0, opt lexeme: }, { state: 20, symbol: "{", mem addr: 0, opt lexeme: }, { state: 91, symbol: "<IfElse>", mem addr: 2018, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: SEPARATOR ,      lexeme: }
Reducing: <Statement> => <Print>

transition number: [ 212 ]
current stack: 11 <Statement> 20 { 91 <IfElse> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 20, symbol: "{", mem addr: 0, opt lexeme: }, { state: 91, symbol: "<IfElse>", mem addr: 2018, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: SEPARATOR ,      lexeme: }
Reducing: <Statement List> => <Statement>

transition number: [ 213 ]
current stack: 30 <Statement List> 20 { 91 <IfElse> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 30, symbol: "<Statement List>", mem addr: 0, opt lexeme: }, { state: 20, symbol: "{", mem addr: 0, opt lexeme: }, { state: 91, symbol: "<IfElse>", mem addr: 2018, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: SEPARATOR ,      lexeme: }
Shifting: "}", next state: 48

transition number: [ 214 ]
current stack: 48 } 30 <Statement List> 20 { 91 <IfElse> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 48, symbol: "}", mem addr: 0, opt lexeme: }, { state: 30, symbol: "<Statement List>", mem addr: 0, opt lexeme: }, { state: 20, symbol: "{", mem addr: 0, opt lexeme: }, { state: 91, symbol: "<IfElse>", mem addr: 2018, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: KEYWORD ,      lexeme: endif
Reducing: <Compound> => { <Statement List> }

transition number: [ 215 ]
current stack: 12 <Compound> 91 <IfElse> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 12, symbol: "<Compound>", mem addr: 0, opt lexeme: }, { state: 91, symbol: "<IfElse>", mem addr: 2018, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: KEYWORD ,      lexeme: endif
Reducing: <Statement> => <Compound>

transition number: [ 216 ]
current stack: 92 <Statement> 91 <IfElse> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 92, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 91, symbol: "<IfElse>", mem addr: 2018, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: KEYWORD ,      lexeme: endif
Shifting: "endif", next state: 93

transition number: [ 217 ]
current stack: 93 endif 92 <Statement> 91 <IfElse> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 93, symbol: "endif", mem addr: 0, opt lexeme: }, { state: 92, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 91, symbol: "<IfElse>", mem addr: 2018, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: KEYWORD ,      lexeme: get
Reducing: <IfElseThen> => <IfElse> <Statement> endif

transition number: [ 218 ]
current stack: 89 <IfElseThen> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 89, symbol: "<IfElseThen>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: KEYWORD ,      lexeme: get
Reducing: <Statement> => <IfElseThen>

transition number: [ 219 ]
current stack: 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: KEYWORD ,      lexeme: get
Shifting: "get", next state: 25

transition number: [ 220 ]
current stack: 25 get 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 25, symbol: "get", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: SEPARATOR ,      lexeme: (
Shifting: "(", next state: 45

transition number: [ 221 ]
current stack: 45 ( 25 get 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 45, symbol: "(", mem addr: 0, opt lexeme: }, { state: 25, symbol: "get", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: IDENTIFIER ,      lexeme: high
Shifting: "IDENTIFIER", next state: 61

transition number: [ 222 ]
current stack: 61 IDENTIFIER 45 ( 25 get 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 61, symbol: "IDENTIFIER", mem addr: 2002, opt lexeme: high}, { state: 45, symbol: "(", mem addr: 0, opt lexeme: }, { state: 25, symbol: "get", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: SEPARATOR ,      lexeme: ,
Shifting: ",", next state: 79

transition number: [ 223 ]
current stack: 79 , 61 IDENTIFIER 45 ( 25 get 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 79, symbol: ",", mem addr: 0, opt lexeme: }, { state: 61, symbol: "IDENTIFIER", mem addr: 2002, opt lexeme: high}, { state: 45, symbol: "(", mem addr: 0, opt lexeme: }, { state: 25, symbol: "get", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: IDENTIFIER ,      lexeme: low
Shifting: "IDENTIFIER", next state: 61

transition number: [ 224 ]
current stack: 61 IDENTIFIER 79 , 61 IDENTIFIER 45 ( 25 get 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 61, symbol: "IDENTIFIER", mem addr: 2001, opt lexeme: low}, { state: 79, symbol: ",", mem addr: 0, opt lexeme: }, { state: 61, symbol: "IDENTIFIER", mem addr: 2002, opt lexeme: high}, { state: 45, symbol: "(", mem addr: 0, opt lexeme: }, { state: 25, symbol: "get", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: SEPARATOR ,      lexeme: )
Reducing: <IDs> => IDENTIFIER

transition number: [ 225 ]
current stack: 85 <IDs> 79 , 61 IDENTIFIER 45 ( 25 get 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 85, symbol: "<IDs>", mem addr: 2021, opt lexeme: }, { state: 79, symbol: ",", mem addr: 0, opt lexeme: }, { state: 61, symbol: "IDENTIFIER", mem addr: 2002, opt lexeme: high}, { state: 45, symbol: "(", mem addr: 0, opt lexeme: }, { state: 25, symbol: "get", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: SEPARATOR ,      lexeme: )
Reducing: <IDs> => IDENTIFIER , <IDs>

transition number: [ 226 ]
current stack: 60 <IDs> 45 ( 25 get 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 60, symbol: "<IDs>", mem addr: 2021, opt lexeme: }, { state: 45, symbol: "(", mem addr: 0, opt lexeme: }, { state: 25, symbol: "get", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: SEPARATOR ,      lexeme: )
Shifting: ")", next state: 78

transition number: [ 227 ]
current stack: 78 ) 60 <IDs> 45 ( 25 get 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 78, symbol: ")", mem addr: 0, opt lexeme: }, { state: 60, symbol: "<IDs>", mem addr: 2021, opt lexeme: }, { state: 45, symbol: "(", mem addr: 0, opt lexeme: }, { state: 25, symbol: "get", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: SEPARATOR ,      lexeme: ;
Shifting: ";", next state: 84

transition number: [ 228 ]
current stack: 84 ; 78 ) 60 <IDs> 45 ( 25 get 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 84, symbol: ";", mem addr: 0, opt lexeme: }, { state: 78, symbol: ")", mem addr: 0, opt lexeme: }, { state: 60, symbol: "<IDs>", mem addr: 2021, opt lexeme: }, { state: 45, symbol: "(", mem addr: 0, opt lexeme: }, { state: 25, symbol: "get", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: KEYWORD ,      lexeme: while
Reducing: <Scan> => get ( <IDs> ) ;

transition number: [ 229 ]
current stack: 17 <Scan> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 17, symbol: "<Scan>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: KEYWORD ,      lexeme: while
Reducing: <Statement> => <Scan>

transition number: [ 230 ]
current stack: 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: KEYWORD ,      lexeme: while
Shifting: "while", next state: 26

transition number: [ 231 ]
current stack: 26 while 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 26, symbol: "while", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: SEPARATOR ,      lexeme: (
Shifting: "(", next state: 46

transition number: [ 232 ]
current stack: 46 ( 26 while 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 46, symbol: "(", mem addr: 0, opt lexeme: }, { state: 26, symbol: "while", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: IDENTIFIER ,      lexeme: low
Shifting: "IDENTIFIER", next state: 39

transition number: [ 233 ]
current stack: 39 IDENTIFIER 46 ( 26 while 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 39, symbol: "IDENTIFIER", mem addr: 2001, opt lexeme: low}, { state: 46, symbol: "(", mem addr: 0, opt lexeme: }, { state: 26, symbol: "while", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: OPERATOR ,      lexeme: <
Reducing: <Primary> => IDENTIFIER

transition number: [ 234 ]
current stack: 38 <Primary> 46 ( 26 while 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 38, symbol: "<Primary>", mem addr: 2001, opt lexeme: }, { state: 46, symbol: "(", mem addr: 0, opt lexeme: }, { state: 26, symbol: "while", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: OPERATOR ,      lexeme: <
Reducing: <Factor> => <Primary>

transition number: [ 235 ]
current stack: 36 <Factor> 46 ( 26 while 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 36, symbol: "<Factor>", mem addr: 2001, opt lexeme: }, { state: 46, symbol: "(", mem addr: 0, opt lexeme: }, { state: 26, symbol: "while", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: OPERATOR ,      lexeme: <
Reducing: <Term> => <Factor>

transition number: [ 236 ]
current stack: 35 <Term> 46 ( 26 while 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 35, symbol: "<Term>", mem addr: 2001, opt lexeme: }, { state: 46, symbol: "(", mem addr: 0, opt lexeme: }, { state: 26, symbol: "while", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: OPERATOR ,      lexeme: <
Reducing: <Expression> => <Term>

transition number: [ 237 ]
current stack: 51 <Expression> 46 ( 26 while 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 51, symbol: "<Expression>", mem addr: 2001, opt lexeme: }, { state: 46, symbol: "(", mem addr: 0, opt lexeme: }, { state: 26, symbol: "while", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: OPERATOR ,      lexeme: <
Shifting: "<", next state: 69

transition number: [ 238 ]
current stack: 69 < 51 <Expression> 46 ( 26 while 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 69, symbol: "<", mem addr: 0, opt lexeme: }, { state: 51, symbol: "<Expression>", mem addr: 2001, opt lexeme: }, { state: 46, symbol: "(", mem addr: 0, opt lexeme: }, { state: 26, symbol: "while", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: IDENTIFIER ,      lexeme: high
Reducing: <Relop> => <

transition number: [ 239 ]
current stack: 65 <Relop> 51 <Expression> 46 ( 26 while 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 65, symbol: "<Relop>", mem addr: 0, opt lexeme: <}, { state: 51, symbol: "<Expression>", mem addr: 2001, opt lexeme: }, { state: 46, symbol: "(", mem addr: 0, opt lexeme: }, { state: 26, symbol: "while", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: IDENTIFIER ,      lexeme: high
Shifting: "IDENTIFIER", next state: 39

transition number: [ 240 ]
current stack: 39 IDENTIFIER 65 <Relop> 51 <Expression> 46 ( 26 while 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 39, symbol: "IDENTIFIER", mem addr: 2002, opt lexeme: high}, { state: 65, symbol: "<Relop>", mem addr: 0, opt lexeme: <}, { state: 51, symbol: "<Expression>", mem addr: 2001, opt lexeme: }, { state: 46, symbol: "(", mem addr: 0, opt lexeme: }, { state: 26, symbol: "while", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: SEPARATOR ,      lexeme: )
Reducing: <Primary> => IDENTIFIER

transition number: [ 241 ]
current stack: 38 <Primary> 65 <Relop> 51 <Expression> 46 ( 26 while 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 38, symbol: "<Primary>", mem addr: 2002, opt lexeme: }, { state: 65, symbol: "<Relop>", mem addr: 0, opt lexeme: <}, { state: 51, symbol: "<Expression>", mem addr: 2001, opt lexeme: }, { state: 46, symbol: "(", mem addr: 0, opt lexeme: }, { state: 26, symbol: "while", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: SEPARATOR ,      lexeme: )
Reducing: <Factor> => <Primary>

transition number: [ 242 ]
current stack: 36 <Factor> 65 <Relop> 51 <Expression> 46 ( 26 while 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 36, symbol: "<Factor>", mem addr: 2002, opt lexeme: }, { state: 65, symbol: "<Relop>", mem addr: 0, opt lexeme: <}, { state: 51, symbol: "<Expression>", mem addr: 2001, opt lexeme: }, { state: 46, symbol: "(", mem addr: 0, opt lexeme: }, { state: 26, symbol: "while", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: SEPARATOR ,      lexeme: )
Reducing: <Term> => <Factor>

transition number: [ 243 ]
current stack: 35 <Term> 65 <Relop> 51 <Expression> 46 ( 26 while 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 35, symbol: "<Term>", mem addr: 2002, opt lexeme: }, { state: 65, symbol: "<Relop>", mem addr: 0, opt lexeme: <}, { state: 51, symbol: "<Expression>", mem addr: 2001, opt lexeme: }, { state: 46, symbol: "(", mem addr: 0, opt lexeme: }, { state: 26, symbol: "while", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: SEPARATOR ,      lexeme: )
Reducing: <Expression> => <Term>

transition number: [ 244 ]
current stack: 82 <Expression> 65 <Relop> 51 <Expression> 46 ( 26 while 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 82, symbol: "<Expression>", mem addr: 2002, opt lexeme: }, { state: 65, symbol: "<Relop>", mem addr: 0, opt lexeme: <}, { state: 51, symbol: "<Expression>", mem addr: 2001, opt lexeme: }, { state: 46, symbol: "(", mem addr: 0, opt lexeme: }, { state: 26, symbol: "while", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: SEPARATOR ,      lexeme: )
Reducing: <Condition> => <Expression> <Relop> <Expression>

transition number: [ 245 ]
current stack: 62 <Condition> 46 ( 26 while 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 62, symbol: "<Condition>", mem addr: 0, opt lexeme: }, { state: 46, symbol: "(", mem addr: 0, opt lexeme: }, { state: 26, symbol: "while", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: SEPARATOR ,      lexeme: )
Shifting: ")", next state: 80

transition number: [ 246 ]
current stack: 80 ) 62 <Condition> 46 ( 26 while 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 80, symbol: ")", mem addr: 0, opt lexeme: }, { state: 62, symbol: "<Condition>", mem addr: 0, opt lexeme: }, { state: 46, symbol: "(", mem addr: 0, opt lexeme: }, { state: 26, symbol: "while", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: SEPARATOR ,      lexeme: {
Reducing: <While> => while ( <Condition> )

transition number: [ 247 ]
current stack: 94 <While> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 94, symbol: "<While>", mem addr: 2023, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: SEPARATOR ,      lexeme: {
Shifting: "{", next state: 20

transition number: [ 248 ]
current stack: 20 { 94 <While> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 20, symbol: "{", mem addr: 0, opt lexeme: }, { state: 94, symbol: "<While>", mem addr: 2023, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: IDENTIFIER ,      lexeme: high
Shifting: "IDENTIFIER", next state: 21

transition number: [ 249 ]
current stack: 21 IDENTIFIER 20 { 94 <While> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 21, symbol: "IDENTIFIER", mem addr: 2002, opt lexeme: high}, { state: 20, symbol: "{", mem addr: 0, opt lexeme: }, { state: 94, symbol: "<While>", mem addr: 2023, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: OPERATOR ,      lexeme: =
Shifting: "=", next state: 31

transition number: [ 250 ]
current stack: 31 = 21 IDENTIFIER 20 { 94 <While> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 31, symbol: "=", mem addr: 0, opt lexeme: }, { state: 21, symbol: "IDENTIFIER", mem addr: 2002, opt lexeme: high}, { state: 20, symbol: "{", mem addr: 0, opt lexeme: }, { state: 94, symbol: "<While>", mem addr: 2023, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: IDENTIFIER ,      lexeme: low
Shifting: "IDENTIFIER", next state: 39

transition number: [ 251 ]
current stack: 39 IDENTIFIER 31 = 21 IDENTIFIER 20 { 94 <While> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 39, symbol: "IDENTIFIER", mem addr: 2001, opt lexeme: low}, { state: 31, symbol: "=", mem addr: 0, opt lexeme: }, { state: 21, symbol: "IDENTIFIER", mem addr: 2002, opt lexeme: high}, { state: 20, symbol: "{", mem addr: 0, opt lexeme: }, { state: 94, symbol: "<While>", mem addr: 2023, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: SEPARATOR ,      lexeme: ;
Reducing: <Primary> => IDENTIFIER

transition number: [ 252 ]
current stack: 38 <Primary> 31 = 21 IDENTIFIER 20 { 94 <While> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 38, symbol: "<Primary>", mem addr: 2001, opt lexeme: }, { state: 31, symbol: "=", mem addr: 0, opt lexeme: }, { state: 21, symbol: "IDENTIFIER", mem addr: 2002, opt lexeme: high}, { state: 20, symbol: "{", mem addr: 0, opt lexeme: }, { state: 94, symbol: "<While>", mem addr: 2023, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: SEPARATOR ,      lexeme: ;
Reducing: <Factor> => <Primary>

transition number: [ 253 ]
current stack: 36 <Factor> 31 = 21 IDENTIFIER 20 { 94 <While> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 36, symbol: "<Factor>", mem addr: 2001, opt lexeme: }, { state: 31, symbol: "=", mem addr: 0, opt lexeme: }, { state: 21, symbol: "IDENTIFIER", mem addr: 2002, opt lexeme: high}, { state: 20, symbol: "{", mem addr: 0, opt lexeme: }, { state: 94, symbol: "<While>", mem addr: 2023, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: SEPARATOR ,      lexeme: ;
Reducing: <Term> => <Factor>

transition number: [ 254 ]
current stack: 35 <Term> 31 = 21 IDENTIFIER 20 { 94 <While> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 35, symbol: "<Term>", mem addr: 2001, opt lexeme: }, { state: 31, symbol: "=", mem addr: 0, opt lexeme: }, { state: 21, symbol: "IDENTIFIER", mem addr: 2002, opt lexeme: high}, { state: 20, symbol: "{", mem addr: 0, opt lexeme: }, { state: 94, symbol: "<While>", mem addr: 2023, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: SEPARATOR ,      lexeme: ;
Reducing: <Expression> => <Term>

transition number: [ 255 ]
current stack: 49 <Expression> 31 = 21 IDENTIFIER 20 { 94 <While> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 49, symbol: "<Expression>", mem addr: 2001, opt lexeme: }, { state: 31, symbol: "=", mem addr: 0, opt lexeme: }, { state: 21, symbol: "IDENTIFIER", mem addr: 2002, opt lexeme: high}, { state: 20, symbol: "{", mem addr: 0, opt lexeme: }, { state: 94, symbol: "<While>", mem addr: 2023, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: SEPARATOR ,      lexeme: ;
Shifting: ";", next state: 63

transition number: [ 256 ]
current stack: 63 ; 49 <Expression> 31 = 21 IDENTIFIER 20 { 94 <While> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 63, symbol: ";", mem addr: 0, opt lexeme: }, { state: 49, symbol: "<Expression>", mem addr: 2001, opt lexeme: }, { state: 31, symbol: "=", mem addr: 0, opt lexeme: }, { state: 21, symbol: "IDENTIFIER", mem addr: 2002, opt lexeme: high}, { state: 20, symbol: "{", mem addr: 0, opt lexeme: }, { state: 94, symbol: "<While>", mem addr: 2023, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: IDENTIFIER ,      lexeme: low
Reducing: <Assign> => IDENTIFIER = <Expression> ;

transition number: [ 257 ]
current stack: 13 <Assign> 20 { 94 <While> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 13, symbol: "<Assign>", mem addr: 0, opt lexeme: }, { state: 20, symbol: "{", mem addr: 0, opt lexeme: }, { state: 94, symbol: "<While>", mem addr: 2023, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: IDENTIFIER ,      lexeme: low
Reducing: <Statement> => <Assign>

transition number: [ 258 ]
current stack: 11 <Statement> 20 { 94 <While> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 20, symbol: "{", mem addr: 0, opt lexeme: }, { state: 94, symbol: "<While>", mem addr: 2023, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: IDENTIFIER ,      lexeme: low
Shifting: "IDENTIFIER", next state: 21

transition number: [ 259 ]
current stack: 21 IDENTIFIER 11 <Statement> 20 { 94 <While> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 21, symbol: "IDENTIFIER", mem addr: 2001, opt lexeme: low}, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 20, symbol: "{", mem addr: 0, opt lexeme: }, { state: 94, symbol: "<While>", mem addr: 2023, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: OPERATOR ,      lexeme: =
Shifting: "=", next state: 31

transition number: [ 260 ]
current stack: 31 = 21 IDENTIFIER 11 <Statement> 20 { 94 <While> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 31, symbol: "=", mem addr: 0, opt lexeme: }, { state: 21, symbol: "IDENTIFIER", mem addr: 2001, opt lexeme: low}, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 20, symbol: "{", mem addr: 0, opt lexeme: }, { state: 94, symbol: "<While>", mem addr: 2023, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: IDENTIFIER ,      lexeme: high
Shifting: "IDENTIFIER", next state: 39

transition number: [ 261 ]
current stack: 39 IDENTIFIER 31 = 21 IDENTIFIER 11 <Statement> 20 { 94 <While> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 39, symbol: "IDENTIFIER", mem addr: 2002, opt lexeme: high}, { state: 31, symbol: "=", mem addr: 0, opt lexeme: }, { state: 21, symbol: "IDENTIFIER", mem addr: 2001, opt lexeme: low}, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 20, symbol: "{", mem addr: 0, opt lexeme: }, { state: 94, symbol: "<While>", mem addr: 2023, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: OPERATOR ,      lexeme: +
Reducing: <Primary> => IDENTIFIER

transition number: [ 262 ]
current stack: 38 <Primary> 31 = 21 IDENTIFIER 11 <Statement> 20 { 94 <While> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 38, symbol: "<Primary>", mem addr: 2002, opt lexeme: }, { state: 31, symbol: "=", mem addr: 0, opt lexeme: }, { state: 21, symbol: "IDENTIFIER", mem addr: 2001, opt lexeme: low}, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 20, symbol: "{", mem addr: 0, opt lexeme: }, { state: 94, symbol: "<While>", mem addr: 2023, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: OPERATOR ,      lexeme: +
Reducing: <Factor> => <Primary>

transition number: [ 263 ]
current stack: 36 <Factor> 31 = 21 IDENTIFIER 11 <Statement> 20 { 94 <While> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 36, symbol: "<Factor>", mem addr: 2002, opt lexeme: }, { state: 31, symbol: "=", mem addr: 0, opt lexeme: }, { state: 21, symbol: "IDENTIFIER", mem addr: 2001, opt lexeme: low}, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 20, symbol: "{", mem addr: 0, opt lexeme: }, { state: 94, symbol: "<While>", mem addr: 2023, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: OPERATOR ,      lexeme: +
Reducing: <Term> => <Factor>

transition number: [ 264 ]
current stack: 35 <Term> 31 = 21 IDENTIFIER 11 <Statement> 20 { 94 <While> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 35, symbol: "<Term>", mem addr: 2002, opt lexeme: }, { state: 31, symbol: "=", mem addr: 0, opt lexeme: }, { state: 21, symbol: "IDENTIFIER", mem addr: 2001, opt lexeme: low}, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 20, symbol: "{", mem addr: 0, opt lexeme: }, { state: 94, symbol: "<While>", mem addr: 2023, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: OPERATOR ,      lexeme: +
Reducing: <Expression> => <Term>

transition number: [ 265 ]
current stack: 49 <Expression> 31 = 21 IDENTIFIER 11 <Statement> 20 { 94 <While> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 49, symbol: "<Expression>", mem addr: 2002, opt lexeme: }, { state: 31, symbol: "=", mem addr: 0, opt lexeme: }, { state: 21, symbol: "IDENTIFIER", mem addr: 2001, opt lexeme: low}, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 20, symbol: "{", mem addr: 0, opt lexeme: }, { state: 94, symbol: "<While>", mem addr: 2023, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: OPERATOR ,      lexeme: +
Shifting: "+", next state: 53

transition number: [ 266 ]
current stack: 53 + 49 <Expression> 31 = 21 IDENTIFIER 11 <Statement> 20 { 94 <While> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 53, symbol: "+", mem addr: 0, opt lexeme: }, { state: 49, symbol: "<Expression>", mem addr: 2002, opt lexeme: }, { state: 31, symbol: "=", mem addr: 0, opt lexeme: }, { state: 21, symbol: "IDENTIFIER", mem addr: 2001, opt lexeme: low}, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 20, symbol: "{", mem addr: 0, opt lexeme: }, { state: 94, symbol: "<While>", mem addr: 2023, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: IDENTIFIER ,      lexeme: step$
Shifting: "IDENTIFIER", next state: 39

transition number: [ 267 ]
current stack: 39 IDENTIFIER 53 + 49 <Expression> 31 = 21 IDENTIFIER 11 <Statement> 20 { 94 <While> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 39, symbol: "IDENTIFIER", mem addr: 2003, opt lexeme: step$}, { state: 53, symbol: "+", mem addr: 0, opt lexeme: }, { state: 49, symbol: "<Expression>", mem addr: 2002, opt lexeme: }, { state: 31, symbol: "=", mem addr: 0, opt lexeme: }, { state: 21, symbol: "IDENTIFIER", mem addr: 2001, opt lexeme: low}, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 20, symbol: "{", mem addr: 0, opt lexeme: }, { state: 94, symbol: "<While>", mem addr: 2023, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: SEPARATOR ,      lexeme: ;
Reducing: <Primary> => IDENTIFIER

transition number: [ 268 ]
current stack: 38 <Primary> 53 + 49 <Expression> 31 = 21 IDENTIFIER 11 <Statement> 20 { 94 <While> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 38, symbol: "<Primary>", mem addr: 2003, opt lexeme: }, { state: 53, symbol: "+", mem addr: 0, opt lexeme: }, { state: 49, symbol: "<Expression>", mem addr: 2002, opt lexeme: }, { state: 31, symbol: "=", mem addr: 0, opt lexeme: }, { state: 21, symbol: "IDENTIFIER", mem addr: 2001, opt lexeme: low}, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 20, symbol: "{", mem addr: 0, opt lexeme: }, { state: 94, symbol: "<While>", mem addr: 2023, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: SEPARATOR ,      lexeme: ;
Reducing: <Factor> => <Primary>

transition number: [ 269 ]
current stack: 36 <Factor> 53 + 49 <Expression> 31 = 21 IDENTIFIER 11 <Statement> 20 { 94 <While> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 36, symbol: "<Factor>", mem addr: 2003, opt lexeme: }, { state: 53, symbol: "+", mem addr: 0, opt lexeme: }, { state: 49, symbol: "<Expression>", mem addr: 2002, opt lexeme: }, { state: 31, symbol: "=", mem addr: 0, opt lexeme: }, { state: 21, symbol: "IDENTIFIER", mem addr: 2001, opt lexeme: low}, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 20, symbol: "{", mem addr: 0, opt lexeme: }, { state: 94, symbol: "<While>", mem addr: 2023, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: SEPARATOR ,      lexeme: ;
Reducing: <Term> => <Factor>

transition number: [ 270 ]
current stack: 72 <Term> 53 + 49 <Expression> 31 = 21 IDENTIFIER 11 <Statement> 20 { 94 <While> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 72, symbol: "<Term>", mem addr: 2003, opt lexeme: }, { state: 53, symbol: "+", mem addr: 0, opt lexeme: }, { state: 49, symbol: "<Expression>", mem addr: 2002, opt lexeme: }, { state: 31, symbol: "=", mem addr: 0, opt lexeme: }, { state: 21, symbol: "IDENTIFIER", mem addr: 2001, opt lexeme: low}, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 20, symbol: "{", mem addr: 0, opt lexeme: }, { state: 94, symbol: "<While>", mem addr: 2023, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: SEPARATOR ,      lexeme: ;
Reducing: <Expression> => <Expression> + <Term>

transition number: [ 271 ]
current stack: 49 <Expression> 31 = 21 IDENTIFIER 11 <Statement> 20 { 94 <While> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 49, symbol: "<Expression>", mem addr: 2024, opt lexeme: }, { state: 31, symbol: "=", mem addr: 0, opt lexeme: }, { state: 21, symbol: "IDENTIFIER", mem addr: 2001, opt lexeme: low}, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 20, symbol: "{", mem addr: 0, opt lexeme: }, { state: 94, symbol: "<While>", mem addr: 2023, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: SEPARATOR ,      lexeme: ;
Shifting: ";", next state: 63

transition number: [ 272 ]
current stack: 63 ; 49 <Expression> 31 = 21 IDENTIFIER 11 <Statement> 20 { 94 <While> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 63, symbol: ";", mem addr: 0, opt lexeme: }, { state: 49, symbol: "<Expression>", mem addr: 2024, opt lexeme: }, { state: 31, symbol: "=", mem addr: 0, opt lexeme: }, { state: 21, symbol: "IDENTIFIER", mem addr: 2001, opt lexeme: low}, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 20, symbol: "{", mem addr: 0, opt lexeme: }, { state: 94, symbol: "<While>", mem addr: 2023, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: KEYWORD ,      lexeme: put
Reducing: <Assign> => IDENTIFIER = <Expression> ;

transition number: [ 273 ]
current stack: 13 <Assign> 11 <Statement> 20 { 94 <While> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 13, symbol: "<Assign>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 20, symbol: "{", mem addr: 0, opt lexeme: }, { state: 94, symbol: "<While>", mem addr: 2023, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: KEYWORD ,      lexeme: put
Reducing: <Statement> => <Assign>

transition number: [ 274 ]
current stack: 11 <Statement> 11 <Statement> 20 { 94 <While> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 20, symbol: "{", mem addr: 0, opt lexeme: }, { state: 94, symbol: "<While>", mem addr: 2023, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: KEYWORD ,      lexeme: put
Shifting: "put", next state: 24

transition number: [ 275 ]
current stack: 24 put 11 <Statement> 11 <Statement> 20 { 94 <While> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 24, symbol: "put", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 20, symbol: "{", mem addr: 0, opt lexeme: }, { state: 94, symbol: "<While>", mem addr: 2023, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: SEPARATOR ,      lexeme: (
Shifting: "(", next state: 44

transition number: [ 276 ]
current stack: 44 ( 24 put 11 <Statement> 11 <Statement> 20 { 94 <While> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 44, symbol: "(", mem addr: 0, opt lexeme: }, { state: 24, symbol: "put", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 20, symbol: "{", mem addr: 0, opt lexeme: }, { state: 94, symbol: "<While>", mem addr: 2023, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: IDENTIFIER ,      lexeme: step$
Shifting: "IDENTIFIER", next state: 39

transition number: [ 277 ]
current stack: 39 IDENTIFIER 44 ( 24 put 11 <Statement> 11 <Statement> 20 { 94 <While> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 39, symbol: "IDENTIFIER", mem addr: 2003, opt lexeme: step$}, { state: 44, symbol: "(", mem addr: 0, opt lexeme: }, { state: 24, symbol: "put", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 20, symbol: "{", mem addr: 0, opt lexeme: }, { state: 94, symbol: "<While>", mem addr: 2023, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: SEPARATOR ,      lexeme: )
Reducing: <Primary> => IDENTIFIER

transition number: [ 278 ]
current stack: 38 <Primary> 44 ( 24 put 11 <Statement> 11 <Statement> 20 { 94 <While> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 38, symbol: "<Primary>", mem addr: 2003, opt lexeme: }, { state: 44, symbol: "(", mem addr: 0, opt lexeme: }, { state: 24, symbol: "put", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 20, symbol: "{", mem addr: 0, opt lexeme: }, { state: 94, symbol: "<While>", mem addr: 2023, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: SEPARATOR ,      lexeme: )
Reducing: <Factor> => <Primary>

transition number: [ 279 ]
current stack: 36 <Factor> 44 ( 24 put 11 <Statement> 11 <Statement> 20 { 94 <While> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 36, symbol: "<Factor>", mem addr: 2003, opt lexeme: }, { state: 44, symbol: "(", mem addr: 0, opt lexeme: }, { state: 24, symbol: "put", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 20, symbol: "{", mem addr: 0, opt lexeme: }, { state: 94, symbol: "<While>", mem addr: 2023, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: SEPARATOR ,      lexeme: )
Reducing: <Term> => <Factor>

transition number: [ 280 ]
current stack: 35 <Term> 44 ( 24 put 11 <Statement> 11 <Statement> 20 { 94 <While> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 35, symbol: "<Term>", mem addr: 2003, opt lexeme: }, { state: 44, symbol: "(", mem addr: 0, opt lexeme: }, { state: 24, symbol: "put", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 20, symbol: "{", mem addr: 0, opt lexeme: }, { state: 94, symbol: "<While>", mem addr: 2023, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: SEPARATOR ,      lexeme: )
Reducing: <Expression> => <Term>

transition number: [ 281 ]
current stack: 34 <Expression> 44 ( 24 put 11 <Statement> 11 <Statement> 20 { 94 <While> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 34, symbol: "<Expression>", mem addr: 2003, opt lexeme: }, { state: 44, symbol: "(", mem addr: 0, opt lexeme: }, { state: 24, symbol: "put", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 20, symbol: "{", mem addr: 0, opt lexeme: }, { state: 94, symbol: "<While>", mem addr: 2023, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: SEPARATOR ,      lexeme: )
Shifting: ")", next state: 77

transition number: [ 282 ]
current stack: 77 ) 34 <Expression> 44 ( 24 put 11 <Statement> 11 <Statement> 20 { 94 <While> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 77, symbol: ")", mem addr: 0, opt lexeme: }, { state: 34, symbol: "<Expression>", mem addr: 2003, opt lexeme: }, { state: 44, symbol: "(", mem addr: 0, opt lexeme: }, { state: 24, symbol: "put", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 20, symbol: "{", mem addr: 0, opt lexeme: }, { state: 94, symbol: "<While>", mem addr: 2023, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: SEPARATOR ,      lexeme: ;
Shifting: ";", next state: 83

transition number: [ 283 ]
current stack: 83 ; 77 ) 34 <Expression> 44 ( 24 put 11 <Statement> 11 <Statement> 20 { 94 <While> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 83, symbol: ";", mem addr: 0, opt lexeme: }, { state: 77, symbol: ")", mem addr: 0, opt lexeme: }, { state: 34, symbol: "<Expression>", mem addr: 2003, opt lexeme: }, { state: 44, symbol: "(", mem addr: 0, opt lexeme: }, { state: 24, symbol: "put", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 20, symbol: "{", mem addr: 0, opt lexeme: }, { state: 94, symbol: "<While>", mem addr: 2023, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: KEYWORD ,      lexeme: get
Reducing: <Print> => put ( <Expression> ) ;

transition number: [ 284 ]
current stack: 16 <Print> 11 <Statement> 11 <Statement> 20 { 94 <While> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 16, symbol: "<Print>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 20, symbol: "{", mem addr: 0, opt lexeme: }, { state: 94, symbol: "<While>", mem addr: 2023, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: KEYWORD ,      lexeme: get
Reducing: <Statement> => <Print>

transition number: [ 285 ]
current stack: 11 <Statement> 11 <Statement> 11 <Statement> 20 { 94 <While> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 20, symbol: "{", mem addr: 0, opt lexeme: }, { state: 94, symbol: "<While>", mem addr: 2023, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: KEYWORD ,      lexeme: get
Shifting: "get", next state: 25

transition number: [ 286 ]
current stack: 25 get 11 <Statement> 11 <Statement> 11 <Statement> 20 { 94 <While> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 25, symbol: "get", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 20, symbol: "{", mem addr: 0, opt lexeme: }, { state: 94, symbol: "<While>", mem addr: 2023, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: SEPARATOR ,      lexeme: (
Shifting: "(", next state: 45

transition number: [ 287 ]
current stack: 45 ( 25 get 11 <Statement> 11 <Statement> 11 <Statement> 20 { 94 <While> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 45, symbol: "(", mem addr: 0, opt lexeme: }, { state: 25, symbol: "get", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 20, symbol: "{", mem addr: 0, opt lexeme: }, { state: 94, symbol: "<While>", mem addr: 2023, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: IDENTIFIER ,      lexeme: step$
Shifting: "IDENTIFIER", next state: 61

transition number: [ 288 ]
current stack: 61 IDENTIFIER 45 ( 25 get 11 <Statement> 11 <Statement> 11 <Statement> 20 { 94 <While> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 61, symbol: "IDENTIFIER", mem addr: 2003, opt lexeme: step$}, { state: 45, symbol: "(", mem addr: 0, opt lexeme: }, { state: 25, symbol: "get", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 20, symbol: "{", mem addr: 0, opt lexeme: }, { state: 94, symbol: "<While>", mem addr: 2023, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: SEPARATOR ,      lexeme: ,
Shifting: ",", next state: 79

transition number: [ 289 ]
current stack: 79 , 61 IDENTIFIER 45 ( 25 get 11 <Statement> 11 <Statement> 11 <Statement> 20 { 94 <While> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 79, symbol: ",", mem addr: 0, opt lexeme: }, { state: 61, symbol: "IDENTIFIER", mem addr: 2003, opt lexeme: step$}, { state: 45, symbol: "(", mem addr: 0, opt lexeme: }, { state: 25, symbol: "get", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 20, symbol: "{", mem addr: 0, opt lexeme: }, { state: 94, symbol: "<While>", mem addr: 2023, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: IDENTIFIER ,      lexeme: low
Shifting: "IDENTIFIER", next state: 61

transition number: [ 290 ]
current stack: 61 IDENTIFIER 79 , 61 IDENTIFIER 45 ( 25 get 11 <Statement> 11 <Statement> 11 <Statement> 20 { 94 <While> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 61, symbol: "IDENTIFIER", mem addr: 2001, opt lexeme: low}, { state: 79, symbol: ",", mem addr: 0, opt lexeme: }, { state: 61, symbol: "IDENTIFIER", mem addr: 2003, opt lexeme: step$}, { state: 45, symbol: "(", mem addr: 0, opt lexeme: }, { state: 25, symbol: "get", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 20, symbol: "{", mem addr: 0, opt lexeme: }, { state: 94, symbol: "<While>", mem addr: 2023, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: SEPARATOR ,      lexeme: ,
Shifting: ",", next state: 79

transition number: [ 291 ]
current stack: 79 , 61 IDENTIFIER 79 , 61 IDENTIFIER 45 ( 25 get 11 <Statement> 11 <Statement> 11 <Statement> 20 { 94 <While> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 79, symbol: ",", mem addr: 0, opt lexeme: }, { state: 61, symbol: "IDENTIFIER", mem addr: 2001, opt lexeme: low}, { state: 79, symbol: ",", mem addr: 0, opt lexeme: }, { state: 61, symbol: "IDENTIFIER", mem addr: 2003, opt lexeme: step$}, { state: 45, symbol: "(", mem addr: 0, opt lexeme: }, { state: 25, symbol: "get", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 20, symbol: "{", mem addr: 0, opt lexeme: }, { state: 94, symbol: "<While>", mem addr: 2023, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: IDENTIFIER ,      lexeme: high
Shifting: "IDENTIFIER", next state: 61

transition number: [ 292 ]
current stack: 61 IDENTIFIER 79 , 61 IDENTIFIER 79 , 61 IDENTIFIER 45 ( 25 get 11 <Statement> 11 <Statement> 11 <Statement> 20 { 94 <While> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 61, symbol: "IDENTIFIER", mem addr: 2002, opt lexeme: high}, { state: 79, symbol: ",", mem addr: 0, opt lexeme: }, { state: 61, symbol: "IDENTIFIER", mem addr: 2001, opt lexeme: low}, { state: 79, symbol: ",", mem addr: 0, opt lexeme: }, { state: 61, symbol: "IDENTIFIER", mem addr: 2003, opt lexeme: step$}, { state: 45, symbol: "(", mem addr: 0, opt lexeme: }, { state: 25, symbol: "get", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 20, symbol: "{", mem addr: 0, opt lexeme: }, { state: 94, symbol: "<While>", mem addr: 2023, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: SEPARATOR ,      lexeme: )
Reducing: <IDs> => IDENTIFIER

transition number: [ 293 ]
current stack: 85 <IDs> 79 , 61 IDENTIFIER 79 , 61 IDENTIFIER 45 ( 25 get 11 <Statement> 11 <Statement> 11 <Statement> 20 { 94 <While> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 85, symbol: "<IDs>", mem addr: 2025, opt lexeme: }, { state: 79, symbol: ",", mem addr: 0, opt lexeme: }, { state: 61, symbol: "IDENTIFIER", mem addr: 2001, opt lexeme: low}, { state: 79, symbol: ",", mem addr: 0, opt lexeme: }, { state: 61, symbol: "IDENTIFIER", mem addr: 2003, opt lexeme: step$}, { state: 45, symbol: "(", mem addr: 0, opt lexeme: }, { state: 25, symbol: "get", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 20, symbol: "{", mem addr: 0, opt lexeme: }, { state: 94, symbol: "<While>", mem addr: 2023, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: SEPARATOR ,      lexeme: )
Reducing: <IDs> => IDENTIFIER , <IDs>

transition number: [ 294 ]
current stack: 85 <IDs> 79 , 61 IDENTIFIER 45 ( 25 get 11 <Statement> 11 <Statement> 11 <Statement> 20 { 94 <While> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 85, symbol: "<IDs>", mem addr: 2025, opt lexeme: }, { state: 79, symbol: ",", mem addr: 0, opt lexeme: }, { state: 61, symbol: "IDENTIFIER", mem addr: 2003, opt lexeme: step$}, { state: 45, symbol: "(", mem addr: 0, opt lexeme: }, { state: 25, symbol: "get", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 20, symbol: "{", mem addr: 0, opt lexeme: }, { state: 94, symbol: "<While>", mem addr: 2023, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: SEPARATOR ,      lexeme: )
Reducing: <IDs> => IDENTIFIER , <IDs>

transition number: [ 295 ]
current stack: 60 <IDs> 45 ( 25 get 11 <Statement> 11 <Statement> 11 <Statement> 20 { 94 <While> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 60, symbol: "<IDs>", mem addr: 2025, opt lexeme: }, { state: 45, symbol: "(", mem addr: 0, opt lexeme: }, { state: 25, symbol: "get", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 20, symbol: "{", mem addr: 0, opt lexeme: }, { state: 94, symbol: "<While>", mem addr: 2023, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: SEPARATOR ,      lexeme: )
Shifting: ")", next state: 78

transition number: [ 296 ]
current stack: 78 ) 60 <IDs> 45 ( 25 get 11 <Statement> 11 <Statement> 11 <Statement> 20 { 94 <While> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 78, symbol: ")", mem addr: 0, opt lexeme: }, { state: 60, symbol: "<IDs>", mem addr: 2025, opt lexeme: }, { state: 45, symbol: "(", mem addr: 0, opt lexeme: }, { state: 25, symbol: "get", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 20, symbol: "{", mem addr: 0, opt lexeme: }, { state: 94, symbol: "<While>", mem addr: 2023, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: SEPARATOR ,      lexeme: ;
Shifting: ";", next state: 84

transition number: [ 297 ]
current stack: 84 ; 78 ) 60 <IDs> 45 ( 25 get 11 <Statement> 11 <Statement> 11 <Statement> 20 { 94 <While> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 84, symbol: ";", mem addr: 0, opt lexeme: }, { state: 78, symbol: ")", mem addr: 0, opt lexeme: }, { state: 60, symbol: "<IDs>", mem addr: 2025, opt lexeme: }, { state: 45, symbol: "(", mem addr: 0, opt lexeme: }, { state: 25, symbol: "get", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 20, symbol: "{", mem addr: 0, opt lexeme: }, { state: 94, symbol: "<While>", mem addr: 2023, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: SEPARATOR ,      lexeme: }
Reducing: <Scan> => get ( <IDs> ) ;

transition number: [ 298 ]
current stack: 17 <Scan> 11 <Statement> 11 <Statement> 11 <Statement> 20 { 94 <While> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 17, symbol: "<Scan>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 20, symbol: "{", mem addr: 0, opt lexeme: }, { state: 94, symbol: "<While>", mem addr: 2023, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: SEPARATOR ,      lexeme: }
Reducing: <Statement> => <Scan>

transition number: [ 299 ]
current stack: 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 20 { 94 <While> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 20, symbol: "{", mem addr: 0, opt lexeme: }, { state: 94, symbol: "<While>", mem addr: 2023, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: SEPARATOR ,      lexeme: }
Reducing: <Statement List> => <Statement>

transition number: [ 300 ]
current stack: 29 <Statement List> 11 <Statement> 11 <Statement> 11 <Statement> 20 { 94 <While> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 29, symbol: "<Statement List>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 20, symbol: "{", mem addr: 0, opt lexeme: }, { state: 94, symbol: "<While>", mem addr: 2023, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: SEPARATOR ,      lexeme: }
Reducing: <Statement List> => <Statement> <Statement List>

transition number: [ 301 ]
current stack: 29 <Statement List> 11 <Statement> 11 <Statement> 20 { 94 <While> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 29, symbol: "<Statement List>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 20, symbol: "{", mem addr: 0, opt lexeme: }, { state: 94, symbol: "<While>", mem addr: 2023, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: SEPARATOR ,      lexeme: }
Reducing: <Statement List> => <Statement> <Statement List>

transition number: [ 302 ]
current stack: 29 <Statement List> 11 <Statement> 20 { 94 <While> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 29, symbol: "<Statement List>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 20, symbol: "{", mem addr: 0, opt lexeme: }, { state: 94, symbol: "<While>", mem addr: 2023, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: SEPARATOR ,      lexeme: }
Reducing: <Statement List> => <Statement> <Statement List>

transition number: [ 303 ]
current stack: 30 <Statement List> 20 { 94 <While> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 30, symbol: "<Statement List>", mem addr: 0, opt lexeme: }, { state: 20, symbol: "{", mem addr: 0, opt lexeme: }, { state: 94, symbol: "<While>", mem addr: 2023, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: SEPARATOR ,      lexeme: }
Shifting: "}", next state: 48

transition number: [ 304 ]
current stack: 48 } 30 <Statement List> 20 { 94 <While> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 48, symbol: "}", mem addr: 0, opt lexeme: }, { state: 30, symbol: "<Statement List>", mem addr: 0, opt lexeme: }, { state: 20, symbol: "{", mem addr: 0, opt lexeme: }, { state: 94, symbol: "<While>", mem addr: 2023, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: KEYWORD ,      lexeme: put
Reducing: <Compound> => { <Statement List> }

transition number: [ 305 ]
current stack: 12 <Compound> 94 <While> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 12, symbol: "<Compound>", mem addr: 0, opt lexeme: }, { state: 94, symbol: "<While>", mem addr: 2023, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: KEYWORD ,      lexeme: put
Reducing: <Statement> => <Compound>

transition number: [ 306 ]
current stack: 86 <Statement> 94 <While> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 86, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 94, symbol: "<While>", mem addr: 2023, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: KEYWORD ,      lexeme: put
Reducing: <WhileThen> => <While> <Statement>

transition number: [ 307 ]
current stack: 18 <WhileThen> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 18, symbol: "<WhileThen>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: KEYWORD ,      lexeme: put
Reducing: <Statement> => <WhileThen>

transition number: [ 308 ]
current stack: 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: KEYWORD ,      lexeme: put
Shifting: "put", next state: 24

transition number: [ 309 ]
current stack: 24 put 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 24, symbol: "put", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: SEPARATOR ,      lexeme: (
Shifting: "(", next state: 44

transition number: [ 310 ]
current stack: 44 ( 24 put 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 44, symbol: "(", mem addr: 0, opt lexeme: }, { state: 24, symbol: "put", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: IDENTIFIER ,      lexeme: done
Shifting: "IDENTIFIER", next state: 39

transition number: [ 311 ]
current stack: 39 IDENTIFIER 44 ( 24 put 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 39, symbol: "IDENTIFIER", mem addr: 2004, opt lexeme: done}, { state: 44, symbol: "(", mem addr: 0, opt lexeme: }, { state: 24, symbol: "put", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: SEPARATOR ,      lexeme: )
Reducing: <Primary> => IDENTIFIER

transition number: [ 312 ]
current stack: 38 <Primary> 44 ( 24 put 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 38, symbol: "<Primary>", mem addr: 2004, opt lexeme: }, { state: 44, symbol: "(", mem addr: 0, opt lexeme: }, { state: 24, symbol: "put", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: SEPARATOR ,      lexeme: )
Reducing: <Factor> => <Primary>

transition number: [ 313 ]
current stack: 36 <Factor> 44 ( 24 put 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 36, symbol: "<Factor>", mem addr: 2004, opt lexeme: }, { state: 44, symbol: "(", mem addr: 0, opt lexeme: }, { state: 24, symbol: "put", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: SEPARATOR ,      lexeme: )
Reducing: <Term> => <Factor>

transition number: [ 314 ]
current stack: 35 <Term> 44 ( 24 put 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 35, symbol: "<Term>", mem addr: 2004, opt lexeme: }, { state: 44, symbol: "(", mem addr: 0, opt lexeme: }, { state: 24, symbol: "put", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: SEPARATOR ,      lexeme: )
Reducing: <Expression> => <Term>

transition number: [ 315 ]
current stack: 34 <Expression> 44 ( 24 put 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 34, symbol: "<Expression>", mem addr: 2004, opt lexeme: }, { state: 44, symbol: "(", mem addr: 0, opt lexeme: }, { state: 24, symbol: "put", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: SEPARATOR ,      lexeme: )
Shifting: ")", next state: 77

transition number: [ 316 ]
current stack: 77 ) 34 <Expression> 44 ( 24 put 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 77, symbol: ")", mem addr: 0, opt lexeme: }, { state: 34, symbol: "<Expression>", mem addr: 2004, opt lexeme: }, { state: 44, symbol: "(", mem addr: 0, opt lexeme: }, { state: 24, symbol: "put", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: SEPARATOR ,      lexeme: ;
Shifting: ";", next state: 83

transition number: [ 317 ]
current stack: 83 ; 77 ) 34 <Expression> 44 ( 24 put 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 83, symbol: ";", mem addr: 0, opt lexeme: }, { state: 77, symbol: ")", mem addr: 0, opt lexeme: }, { state: 34, symbol: "<Expression>", mem addr: 2004, opt lexeme: }, { state: 44, symbol: "(", mem addr: 0, opt lexeme: }, { state: 24, symbol: "put", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: KEYWORD ,      lexeme: return
Reducing: <Print> => put ( <Expression> ) ;

transition number: [ 318 ]
current stack: 16 <Print> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 16, symbol: "<Print>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: KEYWORD ,      lexeme: return
Reducing: <Statement> => <Print>

transition number: [ 319 ]
current stack: 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: KEYWORD ,      lexeme: return
Shifting: "return", next state: 23

transition number: [ 320 ]
current stack: 23 return 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 23, symbol: "return", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: IDENTIFIER ,      lexeme: low
Shifting: "IDENTIFIER", next state: 39

transition number: [ 321 ]
current stack: 39 IDENTIFIER 23 return 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 39, symbol: "IDENTIFIER", mem addr: 2001, opt lexeme: low}, { state: 23, symbol: "return", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: SEPARATOR ,      lexeme: ;
Reducing: <Primary> => IDENTIFIER

transition number: [ 322 ]
current stack: 38 <Primary> 23 return 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 38, symbol: "<Primary>", mem addr: 2001, opt lexeme: }, { state: 23, symbol: "return", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: SEPARATOR ,      lexeme: ;
Reducing: <Factor> => <Primary>

transition number: [ 323 ]
current stack: 36 <Factor> 23 return 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 36, symbol: "<Factor>", mem addr: 2001, opt lexeme: }, { state: 23, symbol: "return", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: SEPARATOR ,      lexeme: ;
Reducing: <Term> => <Factor>

transition number: [ 324 ]
current stack: 35 <Term> 23 return 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 35, symbol: "<Term>", mem addr: 2001, opt lexeme: }, { state: 23, symbol: "return", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: SEPARATOR ,      lexeme: ;
Reducing: <Expression> => <Term>

transition number: [ 325 ]
current stack: 34 <Expression> 23 return 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 34, symbol: "<Expression>", mem addr: 2001, opt lexeme: }, { state: 23, symbol: "return", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: SEPARATOR ,      lexeme: ;
Shifting: ";", next state: 52

transition number: [ 326 ]
current stack: 52 ; 34 <Expression> 23 return 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 52, symbol: ";", mem addr: 0, opt lexeme: }, { state: 34, symbol: "<Expression>", mem addr: 2001, opt lexeme: }, { state: 23, symbol: "return", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: END_INPUT ,      lexeme: $
Reducing: <Return> => return <Expression> ;

transition number: [ 327 ]
current stack: 15 <Return> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 15, symbol: "<Return>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: END_INPUT ,      lexeme: $
Reducing: <Statement> => <Return>

transition number: [ 328 ]
current stack: 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: END_INPUT ,      lexeme: $
Reducing: <Statement List> => <Statement>

transition number: [ 329 ]
current stack: 29 <Statement List> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 29, symbol: "<Statement List>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: END_INPUT ,      lexeme: $
Reducing: <Statement List> => <Statement> <Statement List>

transition number: [ 330 ]
current stack: 29 <Statement List> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 29, symbol: "<Statement List>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: END_INPUT ,      lexeme: $
Reducing: <Statement List> => <Statement> <Statement List>

transition number: [ 331 ]
current stack: 29 <Statement List> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 29, symbol: "<Statement List>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: END_INPUT ,      lexeme: $
Reducing: <Statement List> => <Statement> <Statement List>

transition number: [ 332 ]
current stack: 29 <Statement List> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 29, symbol: "<Statement List>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: END_INPUT ,      lexeme: $
Reducing: <Statement List> => <Statement> <Statement List>

transition number: [ 333 ]
current stack: 29 <Statement List> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 29, symbol: "<Statement List>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: END_INPUT ,      lexeme: $
Reducing: <Statement List> => <Statement> <Statement List>

transition number: [ 334 ]
current stack: 29 <Statement List> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 29, symbol: "<Statement List>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: END_INPUT ,      lexeme: $
Reducing: <Statement List> => <Statement> <Statement List>

transition number: [ 335 ]
current stack: 29 <Statement List> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 29, symbol: "<Statement List>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: END_INPUT ,      lexeme: $
Reducing: <Statement List> => <Statement> <Statement List>

transition number: [ 336 ]
current stack: 29 <Statement List> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 29, symbol: "<Statement List>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: END_INPUT ,      lexeme: $
Reducing: <Statement List> => <Statement> <Statement List>

transition number: [ 337 ]
current stack: 29 <Statement List> 11 <Statement> 11 <Statement> 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 29, symbol: "<Statement List>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: END_INPUT ,      lexeme: $
Reducing: <Statement List> => <Statement> <Statement List>

transition number: [ 338 ]
current stack: 29 <Statement List> 11 <Statement> 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 29, symbol: "<Statement List>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: END_INPUT ,      lexeme: $
Reducing: <Statement List> => <Statement> <Statement List>

transition number: [ 339 ]
current stack: 29 <Statement List> 11 <Statement> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 29, symbol: "<Statement List>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: END_INPUT ,      lexeme: $
Reducing: <Statement List> => <Statement> <Statement List>

transition number: [ 340 ]
current stack: 29 <Statement List> 11 <Statement> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 29, symbol: "<Statement List>", mem addr: 0, opt lexeme: }, { state: 11, symbol: "<Statement>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: END_INPUT ,      lexeme: $
Reducing: <Statement List> => <Statement> <Statement List>

transition number: [ 341 ]
current stack: 19 <Statement List> 4 <Opt Declaration List> 3 % 2 % 0 $ 
current stack frames: { state: 19, symbol: "<Statement List>", mem addr: 0, opt lexeme: }, { state: 4, symbol: "<Opt Declaration List>", mem addr: 0, opt lexeme: }, { state: 3, symbol: "%", mem addr: 0, opt lexeme: }, { state: 2, symbol: "%", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: END_INPUT ,      lexeme: $
Reducing: <Rat23S> => % % <Opt Declaration List> <Statement List>

transition number: [ 342 ]
current stack: 1 <Rat23S> 0 $ 
current stack frames: { state: 1, symbol: "<Rat23S>", mem addr: 0, opt lexeme: }, { state: 0, symbol: "$", mem addr: 0, opt lexeme: }, 
current token: END_INPUT ,      lexeme: $
INPUT ACCEPTED


successfully compiled input. input is valid.