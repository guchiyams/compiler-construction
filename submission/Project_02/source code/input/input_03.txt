function convert$ [fahr:int]
{
    return 5 * (fahr -32) / 9;
}

function gethigher [fahr_one:int, fahr_two:int] 
{
    if (fahr_one > fahr_two)
        {
            return fahr_one;
        }
    else
    {
        return fahr_two;
    }
    endif
}
%%
int    low,  high, step$;      ! declarations !
real   lower, higher, steps$;
boolean islower, ishigher;

get (low, high, step$);

if (low => high)
    {
        return;
    } else if (islower == true) 
        {
        return;
        } endif
endif

while (low  <  high )  
    {  put (low);
        put (convert$ (low));
        low =  low  +  step$;
    } 

return low;